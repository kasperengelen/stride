// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ProtobufEpiFormat.proto

#ifndef PROTOBUF_ProtobufEpiFormat_2eproto__INCLUDED
#define PROTOBUF_ProtobufEpiFormat_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace proto {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_ProtobufEpiFormat_2eproto();
void protobuf_AssignDesc_ProtobufEpiFormat_2eproto();
void protobuf_ShutdownFile_ProtobufEpiFormat_2eproto();

class Coordinate;
class EpiFile;
class Location;
class PopSection;
class Timestep;

// ===================================================================

class EpiFile : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.EpiFile) */ {
 public:
  EpiFile();
  virtual ~EpiFile();

  EpiFile(const EpiFile& from);

  inline EpiFile& operator=(const EpiFile& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const EpiFile& default_instance();

  void Swap(EpiFile* other);

  // implements Message ----------------------------------------------

  inline EpiFile* New() const { return New(NULL); }

  EpiFile* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const EpiFile& from);
  void MergeFrom(const EpiFile& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(EpiFile* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto.Timestep timesteps = 1;
  int timesteps_size() const;
  void clear_timesteps();
  static const int kTimestepsFieldNumber = 1;
  const ::proto::Timestep& timesteps(int index) const;
  ::proto::Timestep* mutable_timesteps(int index);
  ::proto::Timestep* add_timesteps();
  ::google::protobuf::RepeatedPtrField< ::proto::Timestep >*
      mutable_timesteps();
  const ::google::protobuf::RepeatedPtrField< ::proto::Timestep >&
      timesteps() const;

  // @@protoc_insertion_point(class_scope:proto.EpiFile)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::RepeatedPtrField< ::proto::Timestep > timesteps_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_ProtobufEpiFormat_2eproto();
  friend void protobuf_AssignDesc_ProtobufEpiFormat_2eproto();
  friend void protobuf_ShutdownFile_ProtobufEpiFormat_2eproto();

  void InitAsDefaultInstance();
  static EpiFile* default_instance_;
};
// -------------------------------------------------------------------

class Timestep : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.Timestep) */ {
 public:
  Timestep();
  virtual ~Timestep();

  Timestep(const Timestep& from);

  inline Timestep& operator=(const Timestep& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Timestep& default_instance();

  void Swap(Timestep* other);

  // implements Message ----------------------------------------------

  inline Timestep* New() const { return New(NULL); }

  Timestep* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Timestep& from);
  void MergeFrom(const Timestep& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Timestep* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto.Location locations = 1;
  int locations_size() const;
  void clear_locations();
  static const int kLocationsFieldNumber = 1;
  const ::proto::Location& locations(int index) const;
  ::proto::Location* mutable_locations(int index);
  ::proto::Location* add_locations();
  ::google::protobuf::RepeatedPtrField< ::proto::Location >*
      mutable_locations();
  const ::google::protobuf::RepeatedPtrField< ::proto::Location >&
      locations() const;

  // @@protoc_insertion_point(class_scope:proto.Timestep)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::RepeatedPtrField< ::proto::Location > locations_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_ProtobufEpiFormat_2eproto();
  friend void protobuf_AssignDesc_ProtobufEpiFormat_2eproto();
  friend void protobuf_ShutdownFile_ProtobufEpiFormat_2eproto();

  void InitAsDefaultInstance();
  static Timestep* default_instance_;
};
// -------------------------------------------------------------------

class Location : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.Location) */ {
 public:
  Location();
  virtual ~Location();

  Location(const Location& from);

  inline Location& operator=(const Location& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Location& default_instance();

  void Swap(Location* other);

  // implements Message ----------------------------------------------

  inline Location* New() const { return New(NULL); }

  Location* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Location& from);
  void MergeFrom(const Location& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Location* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string name = 1;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // optional .proto.Coordinate coord = 2;
  bool has_coord() const;
  void clear_coord();
  static const int kCoordFieldNumber = 2;
  const ::proto::Coordinate& coord() const;
  ::proto::Coordinate* mutable_coord();
  ::proto::Coordinate* release_coord();
  void set_allocated_coord(::proto::Coordinate* coord);

  // optional .proto.PopSection household = 3;
  bool has_household() const;
  void clear_household();
  static const int kHouseholdFieldNumber = 3;
  const ::proto::PopSection& household() const;
  ::proto::PopSection* mutable_household();
  ::proto::PopSection* release_household();
  void set_allocated_household(::proto::PopSection* household);

  // optional .proto.PopSection k12school = 4;
  bool has_k12school() const;
  void clear_k12school();
  static const int kK12SchoolFieldNumber = 4;
  const ::proto::PopSection& k12school() const;
  ::proto::PopSection* mutable_k12school();
  ::proto::PopSection* release_k12school();
  void set_allocated_k12school(::proto::PopSection* k12school);

  // optional .proto.PopSection college = 5;
  bool has_college() const;
  void clear_college();
  static const int kCollegeFieldNumber = 5;
  const ::proto::PopSection& college() const;
  ::proto::PopSection* mutable_college();
  ::proto::PopSection* release_college();
  void set_allocated_college(::proto::PopSection* college);

  // optional .proto.PopSection workplace = 6;
  bool has_workplace() const;
  void clear_workplace();
  static const int kWorkplaceFieldNumber = 6;
  const ::proto::PopSection& workplace() const;
  ::proto::PopSection* mutable_workplace();
  ::proto::PopSection* release_workplace();
  void set_allocated_workplace(::proto::PopSection* workplace);

  // optional .proto.PopSection primCom = 7;
  bool has_primcom() const;
  void clear_primcom();
  static const int kPrimComFieldNumber = 7;
  const ::proto::PopSection& primcom() const;
  ::proto::PopSection* mutable_primcom();
  ::proto::PopSection* release_primcom();
  void set_allocated_primcom(::proto::PopSection* primcom);

  // optional .proto.PopSection secCom = 8;
  bool has_seccom() const;
  void clear_seccom();
  static const int kSecComFieldNumber = 8;
  const ::proto::PopSection& seccom() const;
  ::proto::PopSection* mutable_seccom();
  ::proto::PopSection* release_seccom();
  void set_allocated_seccom(::proto::PopSection* seccom);

  // optional .proto.PopSection daycare = 9;
  bool has_daycare() const;
  void clear_daycare();
  static const int kDaycareFieldNumber = 9;
  const ::proto::PopSection& daycare() const;
  ::proto::PopSection* mutable_daycare();
  ::proto::PopSection* release_daycare();
  void set_allocated_daycare(::proto::PopSection* daycare);

  // optional .proto.PopSection preschool = 10;
  bool has_preschool() const;
  void clear_preschool();
  static const int kPreschoolFieldNumber = 10;
  const ::proto::PopSection& preschool() const;
  ::proto::PopSection* mutable_preschool();
  ::proto::PopSection* release_preschool();
  void set_allocated_preschool(::proto::PopSection* preschool);

  // @@protoc_insertion_point(class_scope:proto.Location)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::proto::Coordinate* coord_;
  ::proto::PopSection* household_;
  ::proto::PopSection* k12school_;
  ::proto::PopSection* college_;
  ::proto::PopSection* workplace_;
  ::proto::PopSection* primcom_;
  ::proto::PopSection* seccom_;
  ::proto::PopSection* daycare_;
  ::proto::PopSection* preschool_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_ProtobufEpiFormat_2eproto();
  friend void protobuf_AssignDesc_ProtobufEpiFormat_2eproto();
  friend void protobuf_ShutdownFile_ProtobufEpiFormat_2eproto();

  void InitAsDefaultInstance();
  static Location* default_instance_;
};
// -------------------------------------------------------------------

class Coordinate : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.Coordinate) */ {
 public:
  Coordinate();
  virtual ~Coordinate();

  Coordinate(const Coordinate& from);

  inline Coordinate& operator=(const Coordinate& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Coordinate& default_instance();

  void Swap(Coordinate* other);

  // implements Message ----------------------------------------------

  inline Coordinate* New() const { return New(NULL); }

  Coordinate* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Coordinate& from);
  void MergeFrom(const Coordinate& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Coordinate* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional double longitude = 1;
  void clear_longitude();
  static const int kLongitudeFieldNumber = 1;
  double longitude() const;
  void set_longitude(double value);

  // optional double latitude = 2;
  void clear_latitude();
  static const int kLatitudeFieldNumber = 2;
  double latitude() const;
  void set_latitude(double value);

  // @@protoc_insertion_point(class_scope:proto.Coordinate)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  double longitude_;
  double latitude_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_ProtobufEpiFormat_2eproto();
  friend void protobuf_AssignDesc_ProtobufEpiFormat_2eproto();
  friend void protobuf_ShutdownFile_ProtobufEpiFormat_2eproto();

  void InitAsDefaultInstance();
  static Coordinate* default_instance_;
};
// -------------------------------------------------------------------

class PopSection : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.PopSection) */ {
 public:
  PopSection();
  virtual ~PopSection();

  PopSection(const PopSection& from);

  inline PopSection& operator=(const PopSection& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PopSection& default_instance();

  void Swap(PopSection* other);

  // implements Message ----------------------------------------------

  inline PopSection* New() const { return New(NULL); }

  PopSection* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PopSection& from);
  void MergeFrom(const PopSection& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(PopSection* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 population = 1;
  void clear_population();
  static const int kPopulationFieldNumber = 1;
  ::google::protobuf::uint32 population() const;
  void set_population(::google::protobuf::uint32 value);

  // optional double immune = 2;
  void clear_immune();
  static const int kImmuneFieldNumber = 2;
  double immune() const;
  void set_immune(double value);

  // optional double infected = 3;
  void clear_infected();
  static const int kInfectedFieldNumber = 3;
  double infected() const;
  void set_infected(double value);

  // optional double infectious = 4;
  void clear_infectious();
  static const int kInfectiousFieldNumber = 4;
  double infectious() const;
  void set_infectious(double value);

  // optional double recovered = 5;
  void clear_recovered();
  static const int kRecoveredFieldNumber = 5;
  double recovered() const;
  void set_recovered(double value);

  // optional double susceptible = 6;
  void clear_susceptible();
  static const int kSusceptibleFieldNumber = 6;
  double susceptible() const;
  void set_susceptible(double value);

  // optional double symptomatic = 7;
  void clear_symptomatic();
  static const int kSymptomaticFieldNumber = 7;
  double symptomatic() const;
  void set_symptomatic(double value);

  // @@protoc_insertion_point(class_scope:proto.PopSection)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  double immune_;
  double infected_;
  double infectious_;
  double recovered_;
  double susceptible_;
  double symptomatic_;
  ::google::protobuf::uint32 population_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_ProtobufEpiFormat_2eproto();
  friend void protobuf_AssignDesc_ProtobufEpiFormat_2eproto();
  friend void protobuf_ShutdownFile_ProtobufEpiFormat_2eproto();

  void InitAsDefaultInstance();
  static PopSection* default_instance_;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// EpiFile

// repeated .proto.Timestep timesteps = 1;
inline int EpiFile::timesteps_size() const {
  return timesteps_.size();
}
inline void EpiFile::clear_timesteps() {
  timesteps_.Clear();
}
inline const ::proto::Timestep& EpiFile::timesteps(int index) const {
  // @@protoc_insertion_point(field_get:proto.EpiFile.timesteps)
  return timesteps_.Get(index);
}
inline ::proto::Timestep* EpiFile::mutable_timesteps(int index) {
  // @@protoc_insertion_point(field_mutable:proto.EpiFile.timesteps)
  return timesteps_.Mutable(index);
}
inline ::proto::Timestep* EpiFile::add_timesteps() {
  // @@protoc_insertion_point(field_add:proto.EpiFile.timesteps)
  return timesteps_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::Timestep >*
EpiFile::mutable_timesteps() {
  // @@protoc_insertion_point(field_mutable_list:proto.EpiFile.timesteps)
  return &timesteps_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::Timestep >&
EpiFile::timesteps() const {
  // @@protoc_insertion_point(field_list:proto.EpiFile.timesteps)
  return timesteps_;
}

// -------------------------------------------------------------------

// Timestep

// repeated .proto.Location locations = 1;
inline int Timestep::locations_size() const {
  return locations_.size();
}
inline void Timestep::clear_locations() {
  locations_.Clear();
}
inline const ::proto::Location& Timestep::locations(int index) const {
  // @@protoc_insertion_point(field_get:proto.Timestep.locations)
  return locations_.Get(index);
}
inline ::proto::Location* Timestep::mutable_locations(int index) {
  // @@protoc_insertion_point(field_mutable:proto.Timestep.locations)
  return locations_.Mutable(index);
}
inline ::proto::Location* Timestep::add_locations() {
  // @@protoc_insertion_point(field_add:proto.Timestep.locations)
  return locations_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::Location >*
Timestep::mutable_locations() {
  // @@protoc_insertion_point(field_mutable_list:proto.Timestep.locations)
  return &locations_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::Location >&
Timestep::locations() const {
  // @@protoc_insertion_point(field_list:proto.Timestep.locations)
  return locations_;
}

// -------------------------------------------------------------------

// Location

// optional string name = 1;
inline void Location::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Location::name() const {
  // @@protoc_insertion_point(field_get:proto.Location.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Location::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.Location.name)
}
inline void Location::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.Location.name)
}
inline void Location::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.Location.name)
}
inline ::std::string* Location::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:proto.Location.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Location::release_name() {
  // @@protoc_insertion_point(field_release:proto.Location.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Location::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:proto.Location.name)
}

// optional .proto.Coordinate coord = 2;
inline bool Location::has_coord() const {
  return !_is_default_instance_ && coord_ != NULL;
}
inline void Location::clear_coord() {
  if (GetArenaNoVirtual() == NULL && coord_ != NULL) delete coord_;
  coord_ = NULL;
}
inline const ::proto::Coordinate& Location::coord() const {
  // @@protoc_insertion_point(field_get:proto.Location.coord)
  return coord_ != NULL ? *coord_ : *default_instance_->coord_;
}
inline ::proto::Coordinate* Location::mutable_coord() {
  
  if (coord_ == NULL) {
    coord_ = new ::proto::Coordinate;
  }
  // @@protoc_insertion_point(field_mutable:proto.Location.coord)
  return coord_;
}
inline ::proto::Coordinate* Location::release_coord() {
  // @@protoc_insertion_point(field_release:proto.Location.coord)
  
  ::proto::Coordinate* temp = coord_;
  coord_ = NULL;
  return temp;
}
inline void Location::set_allocated_coord(::proto::Coordinate* coord) {
  delete coord_;
  coord_ = coord;
  if (coord) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.Location.coord)
}

// optional .proto.PopSection household = 3;
inline bool Location::has_household() const {
  return !_is_default_instance_ && household_ != NULL;
}
inline void Location::clear_household() {
  if (GetArenaNoVirtual() == NULL && household_ != NULL) delete household_;
  household_ = NULL;
}
inline const ::proto::PopSection& Location::household() const {
  // @@protoc_insertion_point(field_get:proto.Location.household)
  return household_ != NULL ? *household_ : *default_instance_->household_;
}
inline ::proto::PopSection* Location::mutable_household() {
  
  if (household_ == NULL) {
    household_ = new ::proto::PopSection;
  }
  // @@protoc_insertion_point(field_mutable:proto.Location.household)
  return household_;
}
inline ::proto::PopSection* Location::release_household() {
  // @@protoc_insertion_point(field_release:proto.Location.household)
  
  ::proto::PopSection* temp = household_;
  household_ = NULL;
  return temp;
}
inline void Location::set_allocated_household(::proto::PopSection* household) {
  delete household_;
  household_ = household;
  if (household) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.Location.household)
}

// optional .proto.PopSection k12school = 4;
inline bool Location::has_k12school() const {
  return !_is_default_instance_ && k12school_ != NULL;
}
inline void Location::clear_k12school() {
  if (GetArenaNoVirtual() == NULL && k12school_ != NULL) delete k12school_;
  k12school_ = NULL;
}
inline const ::proto::PopSection& Location::k12school() const {
  // @@protoc_insertion_point(field_get:proto.Location.k12school)
  return k12school_ != NULL ? *k12school_ : *default_instance_->k12school_;
}
inline ::proto::PopSection* Location::mutable_k12school() {
  
  if (k12school_ == NULL) {
    k12school_ = new ::proto::PopSection;
  }
  // @@protoc_insertion_point(field_mutable:proto.Location.k12school)
  return k12school_;
}
inline ::proto::PopSection* Location::release_k12school() {
  // @@protoc_insertion_point(field_release:proto.Location.k12school)
  
  ::proto::PopSection* temp = k12school_;
  k12school_ = NULL;
  return temp;
}
inline void Location::set_allocated_k12school(::proto::PopSection* k12school) {
  delete k12school_;
  k12school_ = k12school;
  if (k12school) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.Location.k12school)
}

// optional .proto.PopSection college = 5;
inline bool Location::has_college() const {
  return !_is_default_instance_ && college_ != NULL;
}
inline void Location::clear_college() {
  if (GetArenaNoVirtual() == NULL && college_ != NULL) delete college_;
  college_ = NULL;
}
inline const ::proto::PopSection& Location::college() const {
  // @@protoc_insertion_point(field_get:proto.Location.college)
  return college_ != NULL ? *college_ : *default_instance_->college_;
}
inline ::proto::PopSection* Location::mutable_college() {
  
  if (college_ == NULL) {
    college_ = new ::proto::PopSection;
  }
  // @@protoc_insertion_point(field_mutable:proto.Location.college)
  return college_;
}
inline ::proto::PopSection* Location::release_college() {
  // @@protoc_insertion_point(field_release:proto.Location.college)
  
  ::proto::PopSection* temp = college_;
  college_ = NULL;
  return temp;
}
inline void Location::set_allocated_college(::proto::PopSection* college) {
  delete college_;
  college_ = college;
  if (college) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.Location.college)
}

// optional .proto.PopSection workplace = 6;
inline bool Location::has_workplace() const {
  return !_is_default_instance_ && workplace_ != NULL;
}
inline void Location::clear_workplace() {
  if (GetArenaNoVirtual() == NULL && workplace_ != NULL) delete workplace_;
  workplace_ = NULL;
}
inline const ::proto::PopSection& Location::workplace() const {
  // @@protoc_insertion_point(field_get:proto.Location.workplace)
  return workplace_ != NULL ? *workplace_ : *default_instance_->workplace_;
}
inline ::proto::PopSection* Location::mutable_workplace() {
  
  if (workplace_ == NULL) {
    workplace_ = new ::proto::PopSection;
  }
  // @@protoc_insertion_point(field_mutable:proto.Location.workplace)
  return workplace_;
}
inline ::proto::PopSection* Location::release_workplace() {
  // @@protoc_insertion_point(field_release:proto.Location.workplace)
  
  ::proto::PopSection* temp = workplace_;
  workplace_ = NULL;
  return temp;
}
inline void Location::set_allocated_workplace(::proto::PopSection* workplace) {
  delete workplace_;
  workplace_ = workplace;
  if (workplace) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.Location.workplace)
}

// optional .proto.PopSection primCom = 7;
inline bool Location::has_primcom() const {
  return !_is_default_instance_ && primcom_ != NULL;
}
inline void Location::clear_primcom() {
  if (GetArenaNoVirtual() == NULL && primcom_ != NULL) delete primcom_;
  primcom_ = NULL;
}
inline const ::proto::PopSection& Location::primcom() const {
  // @@protoc_insertion_point(field_get:proto.Location.primCom)
  return primcom_ != NULL ? *primcom_ : *default_instance_->primcom_;
}
inline ::proto::PopSection* Location::mutable_primcom() {
  
  if (primcom_ == NULL) {
    primcom_ = new ::proto::PopSection;
  }
  // @@protoc_insertion_point(field_mutable:proto.Location.primCom)
  return primcom_;
}
inline ::proto::PopSection* Location::release_primcom() {
  // @@protoc_insertion_point(field_release:proto.Location.primCom)
  
  ::proto::PopSection* temp = primcom_;
  primcom_ = NULL;
  return temp;
}
inline void Location::set_allocated_primcom(::proto::PopSection* primcom) {
  delete primcom_;
  primcom_ = primcom;
  if (primcom) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.Location.primCom)
}

// optional .proto.PopSection secCom = 8;
inline bool Location::has_seccom() const {
  return !_is_default_instance_ && seccom_ != NULL;
}
inline void Location::clear_seccom() {
  if (GetArenaNoVirtual() == NULL && seccom_ != NULL) delete seccom_;
  seccom_ = NULL;
}
inline const ::proto::PopSection& Location::seccom() const {
  // @@protoc_insertion_point(field_get:proto.Location.secCom)
  return seccom_ != NULL ? *seccom_ : *default_instance_->seccom_;
}
inline ::proto::PopSection* Location::mutable_seccom() {
  
  if (seccom_ == NULL) {
    seccom_ = new ::proto::PopSection;
  }
  // @@protoc_insertion_point(field_mutable:proto.Location.secCom)
  return seccom_;
}
inline ::proto::PopSection* Location::release_seccom() {
  // @@protoc_insertion_point(field_release:proto.Location.secCom)
  
  ::proto::PopSection* temp = seccom_;
  seccom_ = NULL;
  return temp;
}
inline void Location::set_allocated_seccom(::proto::PopSection* seccom) {
  delete seccom_;
  seccom_ = seccom;
  if (seccom) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.Location.secCom)
}

// optional .proto.PopSection daycare = 9;
inline bool Location::has_daycare() const {
  return !_is_default_instance_ && daycare_ != NULL;
}
inline void Location::clear_daycare() {
  if (GetArenaNoVirtual() == NULL && daycare_ != NULL) delete daycare_;
  daycare_ = NULL;
}
inline const ::proto::PopSection& Location::daycare() const {
  // @@protoc_insertion_point(field_get:proto.Location.daycare)
  return daycare_ != NULL ? *daycare_ : *default_instance_->daycare_;
}
inline ::proto::PopSection* Location::mutable_daycare() {
  
  if (daycare_ == NULL) {
    daycare_ = new ::proto::PopSection;
  }
  // @@protoc_insertion_point(field_mutable:proto.Location.daycare)
  return daycare_;
}
inline ::proto::PopSection* Location::release_daycare() {
  // @@protoc_insertion_point(field_release:proto.Location.daycare)
  
  ::proto::PopSection* temp = daycare_;
  daycare_ = NULL;
  return temp;
}
inline void Location::set_allocated_daycare(::proto::PopSection* daycare) {
  delete daycare_;
  daycare_ = daycare;
  if (daycare) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.Location.daycare)
}

// optional .proto.PopSection preschool = 10;
inline bool Location::has_preschool() const {
  return !_is_default_instance_ && preschool_ != NULL;
}
inline void Location::clear_preschool() {
  if (GetArenaNoVirtual() == NULL && preschool_ != NULL) delete preschool_;
  preschool_ = NULL;
}
inline const ::proto::PopSection& Location::preschool() const {
  // @@protoc_insertion_point(field_get:proto.Location.preschool)
  return preschool_ != NULL ? *preschool_ : *default_instance_->preschool_;
}
inline ::proto::PopSection* Location::mutable_preschool() {
  
  if (preschool_ == NULL) {
    preschool_ = new ::proto::PopSection;
  }
  // @@protoc_insertion_point(field_mutable:proto.Location.preschool)
  return preschool_;
}
inline ::proto::PopSection* Location::release_preschool() {
  // @@protoc_insertion_point(field_release:proto.Location.preschool)
  
  ::proto::PopSection* temp = preschool_;
  preschool_ = NULL;
  return temp;
}
inline void Location::set_allocated_preschool(::proto::PopSection* preschool) {
  delete preschool_;
  preschool_ = preschool;
  if (preschool) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.Location.preschool)
}

// -------------------------------------------------------------------

// Coordinate

// optional double longitude = 1;
inline void Coordinate::clear_longitude() {
  longitude_ = 0;
}
inline double Coordinate::longitude() const {
  // @@protoc_insertion_point(field_get:proto.Coordinate.longitude)
  return longitude_;
}
inline void Coordinate::set_longitude(double value) {
  
  longitude_ = value;
  // @@protoc_insertion_point(field_set:proto.Coordinate.longitude)
}

// optional double latitude = 2;
inline void Coordinate::clear_latitude() {
  latitude_ = 0;
}
inline double Coordinate::latitude() const {
  // @@protoc_insertion_point(field_get:proto.Coordinate.latitude)
  return latitude_;
}
inline void Coordinate::set_latitude(double value) {
  
  latitude_ = value;
  // @@protoc_insertion_point(field_set:proto.Coordinate.latitude)
}

// -------------------------------------------------------------------

// PopSection

// optional uint32 population = 1;
inline void PopSection::clear_population() {
  population_ = 0u;
}
inline ::google::protobuf::uint32 PopSection::population() const {
  // @@protoc_insertion_point(field_get:proto.PopSection.population)
  return population_;
}
inline void PopSection::set_population(::google::protobuf::uint32 value) {
  
  population_ = value;
  // @@protoc_insertion_point(field_set:proto.PopSection.population)
}

// optional double immune = 2;
inline void PopSection::clear_immune() {
  immune_ = 0;
}
inline double PopSection::immune() const {
  // @@protoc_insertion_point(field_get:proto.PopSection.immune)
  return immune_;
}
inline void PopSection::set_immune(double value) {
  
  immune_ = value;
  // @@protoc_insertion_point(field_set:proto.PopSection.immune)
}

// optional double infected = 3;
inline void PopSection::clear_infected() {
  infected_ = 0;
}
inline double PopSection::infected() const {
  // @@protoc_insertion_point(field_get:proto.PopSection.infected)
  return infected_;
}
inline void PopSection::set_infected(double value) {
  
  infected_ = value;
  // @@protoc_insertion_point(field_set:proto.PopSection.infected)
}

// optional double infectious = 4;
inline void PopSection::clear_infectious() {
  infectious_ = 0;
}
inline double PopSection::infectious() const {
  // @@protoc_insertion_point(field_get:proto.PopSection.infectious)
  return infectious_;
}
inline void PopSection::set_infectious(double value) {
  
  infectious_ = value;
  // @@protoc_insertion_point(field_set:proto.PopSection.infectious)
}

// optional double recovered = 5;
inline void PopSection::clear_recovered() {
  recovered_ = 0;
}
inline double PopSection::recovered() const {
  // @@protoc_insertion_point(field_get:proto.PopSection.recovered)
  return recovered_;
}
inline void PopSection::set_recovered(double value) {
  
  recovered_ = value;
  // @@protoc_insertion_point(field_set:proto.PopSection.recovered)
}

// optional double susceptible = 6;
inline void PopSection::clear_susceptible() {
  susceptible_ = 0;
}
inline double PopSection::susceptible() const {
  // @@protoc_insertion_point(field_get:proto.PopSection.susceptible)
  return susceptible_;
}
inline void PopSection::set_susceptible(double value) {
  
  susceptible_ = value;
  // @@protoc_insertion_point(field_set:proto.PopSection.susceptible)
}

// optional double symptomatic = 7;
inline void PopSection::clear_symptomatic() {
  symptomatic_ = 0;
}
inline double PopSection::symptomatic() const {
  // @@protoc_insertion_point(field_get:proto.PopSection.symptomatic)
  return symptomatic_;
}
inline void PopSection::set_symptomatic(double value) {
  
  symptomatic_ = value;
  // @@protoc_insertion_point(field_set:proto.PopSection.symptomatic)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace proto

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_ProtobufEpiFormat_2eproto__INCLUDED
