// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ProtobufEpiFormat.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "ProtobufEpiFormat.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace proto {

namespace {

const ::google::protobuf::Descriptor* EpiFile_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  EpiFile_reflection_ = NULL;
const ::google::protobuf::Descriptor* Timestep_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Timestep_reflection_ = NULL;
const ::google::protobuf::Descriptor* Location_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Location_reflection_ = NULL;
const ::google::protobuf::Descriptor* Coordinate_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Coordinate_reflection_ = NULL;
const ::google::protobuf::Descriptor* PopSection_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PopSection_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_ProtobufEpiFormat_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_ProtobufEpiFormat_2eproto() {
  protobuf_AddDesc_ProtobufEpiFormat_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "ProtobufEpiFormat.proto");
  GOOGLE_CHECK(file != NULL);
  EpiFile_descriptor_ = file->message_type(0);
  static const int EpiFile_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EpiFile, timesteps_),
  };
  EpiFile_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      EpiFile_descriptor_,
      EpiFile::default_instance_,
      EpiFile_offsets_,
      -1,
      -1,
      -1,
      sizeof(EpiFile),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EpiFile, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EpiFile, _is_default_instance_));
  Timestep_descriptor_ = file->message_type(1);
  static const int Timestep_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Timestep, locations_),
  };
  Timestep_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Timestep_descriptor_,
      Timestep::default_instance_,
      Timestep_offsets_,
      -1,
      -1,
      -1,
      sizeof(Timestep),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Timestep, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Timestep, _is_default_instance_));
  Location_descriptor_ = file->message_type(2);
  static const int Location_offsets_[10] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Location, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Location, coord_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Location, household_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Location, k12school_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Location, college_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Location, workplace_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Location, primcom_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Location, seccom_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Location, daycare_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Location, preschool_),
  };
  Location_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Location_descriptor_,
      Location::default_instance_,
      Location_offsets_,
      -1,
      -1,
      -1,
      sizeof(Location),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Location, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Location, _is_default_instance_));
  Coordinate_descriptor_ = file->message_type(3);
  static const int Coordinate_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Coordinate, longitude_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Coordinate, latitude_),
  };
  Coordinate_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Coordinate_descriptor_,
      Coordinate::default_instance_,
      Coordinate_offsets_,
      -1,
      -1,
      -1,
      sizeof(Coordinate),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Coordinate, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Coordinate, _is_default_instance_));
  PopSection_descriptor_ = file->message_type(4);
  static const int PopSection_offsets_[7] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PopSection, population_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PopSection, immune_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PopSection, infected_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PopSection, infectious_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PopSection, recovered_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PopSection, susceptible_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PopSection, symptomatic_),
  };
  PopSection_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PopSection_descriptor_,
      PopSection::default_instance_,
      PopSection_offsets_,
      -1,
      -1,
      -1,
      sizeof(PopSection),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PopSection, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PopSection, _is_default_instance_));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_ProtobufEpiFormat_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      EpiFile_descriptor_, &EpiFile::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Timestep_descriptor_, &Timestep::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Location_descriptor_, &Location::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Coordinate_descriptor_, &Coordinate::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PopSection_descriptor_, &PopSection::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_ProtobufEpiFormat_2eproto() {
  delete EpiFile::default_instance_;
  delete EpiFile_reflection_;
  delete Timestep::default_instance_;
  delete Timestep_reflection_;
  delete Location::default_instance_;
  delete Location_reflection_;
  delete Coordinate::default_instance_;
  delete Coordinate_reflection_;
  delete PopSection::default_instance_;
  delete PopSection_reflection_;
}

void protobuf_AddDesc_ProtobufEpiFormat_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AddDesc_ProtobufEpiFormat_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\027ProtobufEpiFormat.proto\022\005proto\"-\n\007EpiF"
    "ile\022\"\n\ttimesteps\030\001 \003(\0132\017.proto.Timestep\""
    ".\n\010Timestep\022\"\n\tlocations\030\001 \003(\0132\017.proto.L"
    "ocation\"\341\002\n\010Location\022\014\n\004name\030\001 \001(\t\022 \n\005co"
    "ord\030\002 \001(\0132\021.proto.Coordinate\022$\n\thousehol"
    "d\030\003 \001(\0132\021.proto.PopSection\022$\n\tk12school\030"
    "\004 \001(\0132\021.proto.PopSection\022\"\n\007college\030\005 \001("
    "\0132\021.proto.PopSection\022$\n\tworkplace\030\006 \001(\0132"
    "\021.proto.PopSection\022\"\n\007primCom\030\007 \001(\0132\021.pr"
    "oto.PopSection\022!\n\006secCom\030\010 \001(\0132\021.proto.P"
    "opSection\022\"\n\007daycare\030\t \001(\0132\021.proto.PopSe"
    "ction\022$\n\tpreschool\030\n \001(\0132\021.proto.PopSect"
    "ion\"1\n\nCoordinate\022\021\n\tlongitude\030\001 \001(\001\022\020\n\010"
    "latitude\030\002 \001(\001\"\223\001\n\nPopSection\022\022\n\npopulat"
    "ion\030\001 \001(\r\022\016\n\006immune\030\002 \001(\001\022\020\n\010infected\030\003 "
    "\001(\001\022\022\n\ninfectious\030\004 \001(\001\022\021\n\trecovered\030\005 \001"
    "(\001\022\023\n\013susceptible\030\006 \001(\001\022\023\n\013symptomatic\030\007"
    " \001(\001b\006proto3", 692);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "ProtobufEpiFormat.proto", &protobuf_RegisterTypes);
  EpiFile::default_instance_ = new EpiFile();
  Timestep::default_instance_ = new Timestep();
  Location::default_instance_ = new Location();
  Coordinate::default_instance_ = new Coordinate();
  PopSection::default_instance_ = new PopSection();
  EpiFile::default_instance_->InitAsDefaultInstance();
  Timestep::default_instance_->InitAsDefaultInstance();
  Location::default_instance_->InitAsDefaultInstance();
  Coordinate::default_instance_->InitAsDefaultInstance();
  PopSection::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_ProtobufEpiFormat_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_ProtobufEpiFormat_2eproto {
  StaticDescriptorInitializer_ProtobufEpiFormat_2eproto() {
    protobuf_AddDesc_ProtobufEpiFormat_2eproto();
  }
} static_descriptor_initializer_ProtobufEpiFormat_2eproto_;

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EpiFile::kTimestepsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EpiFile::EpiFile()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.EpiFile)
}

void EpiFile::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

EpiFile::EpiFile(const EpiFile& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:proto.EpiFile)
}

void EpiFile::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
}

EpiFile::~EpiFile() {
  // @@protoc_insertion_point(destructor:proto.EpiFile)
  SharedDtor();
}

void EpiFile::SharedDtor() {
  if (this != default_instance_) {
  }
}

void EpiFile::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* EpiFile::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return EpiFile_descriptor_;
}

const EpiFile& EpiFile::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtobufEpiFormat_2eproto();
  return *default_instance_;
}

EpiFile* EpiFile::default_instance_ = NULL;

EpiFile* EpiFile::New(::google::protobuf::Arena* arena) const {
  EpiFile* n = new EpiFile;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void EpiFile::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.EpiFile)
  timesteps_.Clear();
}

bool EpiFile::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.EpiFile)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto.Timestep timesteps = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_timesteps:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_timesteps()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_timesteps;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.EpiFile)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.EpiFile)
  return false;
#undef DO_
}

void EpiFile::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.EpiFile)
  // repeated .proto.Timestep timesteps = 1;
  for (unsigned int i = 0, n = this->timesteps_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->timesteps(i), output);
  }

  // @@protoc_insertion_point(serialize_end:proto.EpiFile)
}

::google::protobuf::uint8* EpiFile::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.EpiFile)
  // repeated .proto.Timestep timesteps = 1;
  for (unsigned int i = 0, n = this->timesteps_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->timesteps(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:proto.EpiFile)
  return target;
}

int EpiFile::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:proto.EpiFile)
  int total_size = 0;

  // repeated .proto.Timestep timesteps = 1;
  total_size += 1 * this->timesteps_size();
  for (int i = 0; i < this->timesteps_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->timesteps(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void EpiFile::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.EpiFile)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const EpiFile* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const EpiFile>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.EpiFile)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.EpiFile)
    MergeFrom(*source);
  }
}

void EpiFile::MergeFrom(const EpiFile& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.EpiFile)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  timesteps_.MergeFrom(from.timesteps_);
}

void EpiFile::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.EpiFile)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EpiFile::CopyFrom(const EpiFile& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.EpiFile)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EpiFile::IsInitialized() const {

  return true;
}

void EpiFile::Swap(EpiFile* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EpiFile::InternalSwap(EpiFile* other) {
  timesteps_.UnsafeArenaSwap(&other->timesteps_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata EpiFile::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = EpiFile_descriptor_;
  metadata.reflection = EpiFile_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// EpiFile

// repeated .proto.Timestep timesteps = 1;
int EpiFile::timesteps_size() const {
  return timesteps_.size();
}
void EpiFile::clear_timesteps() {
  timesteps_.Clear();
}
const ::proto::Timestep& EpiFile::timesteps(int index) const {
  // @@protoc_insertion_point(field_get:proto.EpiFile.timesteps)
  return timesteps_.Get(index);
}
::proto::Timestep* EpiFile::mutable_timesteps(int index) {
  // @@protoc_insertion_point(field_mutable:proto.EpiFile.timesteps)
  return timesteps_.Mutable(index);
}
::proto::Timestep* EpiFile::add_timesteps() {
  // @@protoc_insertion_point(field_add:proto.EpiFile.timesteps)
  return timesteps_.Add();
}
::google::protobuf::RepeatedPtrField< ::proto::Timestep >*
EpiFile::mutable_timesteps() {
  // @@protoc_insertion_point(field_mutable_list:proto.EpiFile.timesteps)
  return &timesteps_;
}
const ::google::protobuf::RepeatedPtrField< ::proto::Timestep >&
EpiFile::timesteps() const {
  // @@protoc_insertion_point(field_list:proto.EpiFile.timesteps)
  return timesteps_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Timestep::kLocationsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Timestep::Timestep()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.Timestep)
}

void Timestep::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

Timestep::Timestep(const Timestep& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:proto.Timestep)
}

void Timestep::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
}

Timestep::~Timestep() {
  // @@protoc_insertion_point(destructor:proto.Timestep)
  SharedDtor();
}

void Timestep::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Timestep::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Timestep::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Timestep_descriptor_;
}

const Timestep& Timestep::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtobufEpiFormat_2eproto();
  return *default_instance_;
}

Timestep* Timestep::default_instance_ = NULL;

Timestep* Timestep::New(::google::protobuf::Arena* arena) const {
  Timestep* n = new Timestep;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Timestep::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.Timestep)
  locations_.Clear();
}

bool Timestep::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.Timestep)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto.Location locations = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_locations:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_locations()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_locations;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.Timestep)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.Timestep)
  return false;
#undef DO_
}

void Timestep::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.Timestep)
  // repeated .proto.Location locations = 1;
  for (unsigned int i = 0, n = this->locations_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->locations(i), output);
  }

  // @@protoc_insertion_point(serialize_end:proto.Timestep)
}

::google::protobuf::uint8* Timestep::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.Timestep)
  // repeated .proto.Location locations = 1;
  for (unsigned int i = 0, n = this->locations_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->locations(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:proto.Timestep)
  return target;
}

int Timestep::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:proto.Timestep)
  int total_size = 0;

  // repeated .proto.Location locations = 1;
  total_size += 1 * this->locations_size();
  for (int i = 0; i < this->locations_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->locations(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Timestep::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.Timestep)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Timestep* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Timestep>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.Timestep)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.Timestep)
    MergeFrom(*source);
  }
}

void Timestep::MergeFrom(const Timestep& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.Timestep)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  locations_.MergeFrom(from.locations_);
}

void Timestep::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.Timestep)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Timestep::CopyFrom(const Timestep& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.Timestep)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Timestep::IsInitialized() const {

  return true;
}

void Timestep::Swap(Timestep* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Timestep::InternalSwap(Timestep* other) {
  locations_.UnsafeArenaSwap(&other->locations_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Timestep::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Timestep_descriptor_;
  metadata.reflection = Timestep_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Timestep

// repeated .proto.Location locations = 1;
int Timestep::locations_size() const {
  return locations_.size();
}
void Timestep::clear_locations() {
  locations_.Clear();
}
const ::proto::Location& Timestep::locations(int index) const {
  // @@protoc_insertion_point(field_get:proto.Timestep.locations)
  return locations_.Get(index);
}
::proto::Location* Timestep::mutable_locations(int index) {
  // @@protoc_insertion_point(field_mutable:proto.Timestep.locations)
  return locations_.Mutable(index);
}
::proto::Location* Timestep::add_locations() {
  // @@protoc_insertion_point(field_add:proto.Timestep.locations)
  return locations_.Add();
}
::google::protobuf::RepeatedPtrField< ::proto::Location >*
Timestep::mutable_locations() {
  // @@protoc_insertion_point(field_mutable_list:proto.Timestep.locations)
  return &locations_;
}
const ::google::protobuf::RepeatedPtrField< ::proto::Location >&
Timestep::locations() const {
  // @@protoc_insertion_point(field_list:proto.Timestep.locations)
  return locations_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Location::kNameFieldNumber;
const int Location::kCoordFieldNumber;
const int Location::kHouseholdFieldNumber;
const int Location::kK12SchoolFieldNumber;
const int Location::kCollegeFieldNumber;
const int Location::kWorkplaceFieldNumber;
const int Location::kPrimComFieldNumber;
const int Location::kSecComFieldNumber;
const int Location::kDaycareFieldNumber;
const int Location::kPreschoolFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Location::Location()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.Location)
}

void Location::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  coord_ = const_cast< ::proto::Coordinate*>(&::proto::Coordinate::default_instance());
  household_ = const_cast< ::proto::PopSection*>(&::proto::PopSection::default_instance());
  k12school_ = const_cast< ::proto::PopSection*>(&::proto::PopSection::default_instance());
  college_ = const_cast< ::proto::PopSection*>(&::proto::PopSection::default_instance());
  workplace_ = const_cast< ::proto::PopSection*>(&::proto::PopSection::default_instance());
  primcom_ = const_cast< ::proto::PopSection*>(&::proto::PopSection::default_instance());
  seccom_ = const_cast< ::proto::PopSection*>(&::proto::PopSection::default_instance());
  daycare_ = const_cast< ::proto::PopSection*>(&::proto::PopSection::default_instance());
  preschool_ = const_cast< ::proto::PopSection*>(&::proto::PopSection::default_instance());
}

Location::Location(const Location& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:proto.Location)
}

void Location::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  coord_ = NULL;
  household_ = NULL;
  k12school_ = NULL;
  college_ = NULL;
  workplace_ = NULL;
  primcom_ = NULL;
  seccom_ = NULL;
  daycare_ = NULL;
  preschool_ = NULL;
}

Location::~Location() {
  // @@protoc_insertion_point(destructor:proto.Location)
  SharedDtor();
}

void Location::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
    delete coord_;
    delete household_;
    delete k12school_;
    delete college_;
    delete workplace_;
    delete primcom_;
    delete seccom_;
    delete daycare_;
    delete preschool_;
  }
}

void Location::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Location::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Location_descriptor_;
}

const Location& Location::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtobufEpiFormat_2eproto();
  return *default_instance_;
}

Location* Location::default_instance_ = NULL;

Location* Location::New(::google::protobuf::Arena* arena) const {
  Location* n = new Location;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Location::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.Location)
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && coord_ != NULL) delete coord_;
  coord_ = NULL;
  if (GetArenaNoVirtual() == NULL && household_ != NULL) delete household_;
  household_ = NULL;
  if (GetArenaNoVirtual() == NULL && k12school_ != NULL) delete k12school_;
  k12school_ = NULL;
  if (GetArenaNoVirtual() == NULL && college_ != NULL) delete college_;
  college_ = NULL;
  if (GetArenaNoVirtual() == NULL && workplace_ != NULL) delete workplace_;
  workplace_ = NULL;
  if (GetArenaNoVirtual() == NULL && primcom_ != NULL) delete primcom_;
  primcom_ = NULL;
  if (GetArenaNoVirtual() == NULL && seccom_ != NULL) delete seccom_;
  seccom_ = NULL;
  if (GetArenaNoVirtual() == NULL && daycare_ != NULL) delete daycare_;
  daycare_ = NULL;
  if (GetArenaNoVirtual() == NULL && preschool_ != NULL) delete preschool_;
  preschool_ = NULL;
}

bool Location::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.Location)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto.Location.name"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_coord;
        break;
      }

      // optional .proto.Coordinate coord = 2;
      case 2: {
        if (tag == 18) {
         parse_coord:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_coord()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_household;
        break;
      }

      // optional .proto.PopSection household = 3;
      case 3: {
        if (tag == 26) {
         parse_household:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_household()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_k12school;
        break;
      }

      // optional .proto.PopSection k12school = 4;
      case 4: {
        if (tag == 34) {
         parse_k12school:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_k12school()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_college;
        break;
      }

      // optional .proto.PopSection college = 5;
      case 5: {
        if (tag == 42) {
         parse_college:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_college()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_workplace;
        break;
      }

      // optional .proto.PopSection workplace = 6;
      case 6: {
        if (tag == 50) {
         parse_workplace:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_workplace()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_primCom;
        break;
      }

      // optional .proto.PopSection primCom = 7;
      case 7: {
        if (tag == 58) {
         parse_primCom:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_primcom()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(66)) goto parse_secCom;
        break;
      }

      // optional .proto.PopSection secCom = 8;
      case 8: {
        if (tag == 66) {
         parse_secCom:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_seccom()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(74)) goto parse_daycare;
        break;
      }

      // optional .proto.PopSection daycare = 9;
      case 9: {
        if (tag == 74) {
         parse_daycare:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_daycare()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(82)) goto parse_preschool;
        break;
      }

      // optional .proto.PopSection preschool = 10;
      case 10: {
        if (tag == 82) {
         parse_preschool:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_preschool()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.Location)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.Location)
  return false;
#undef DO_
}

void Location::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.Location)
  // optional string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.Location.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // optional .proto.Coordinate coord = 2;
  if (this->has_coord()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->coord_, output);
  }

  // optional .proto.PopSection household = 3;
  if (this->has_household()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->household_, output);
  }

  // optional .proto.PopSection k12school = 4;
  if (this->has_k12school()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *this->k12school_, output);
  }

  // optional .proto.PopSection college = 5;
  if (this->has_college()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, *this->college_, output);
  }

  // optional .proto.PopSection workplace = 6;
  if (this->has_workplace()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, *this->workplace_, output);
  }

  // optional .proto.PopSection primCom = 7;
  if (this->has_primcom()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, *this->primcom_, output);
  }

  // optional .proto.PopSection secCom = 8;
  if (this->has_seccom()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, *this->seccom_, output);
  }

  // optional .proto.PopSection daycare = 9;
  if (this->has_daycare()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, *this->daycare_, output);
  }

  // optional .proto.PopSection preschool = 10;
  if (this->has_preschool()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, *this->preschool_, output);
  }

  // @@protoc_insertion_point(serialize_end:proto.Location)
}

::google::protobuf::uint8* Location::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.Location)
  // optional string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.Location.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // optional .proto.Coordinate coord = 2;
  if (this->has_coord()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->coord_, false, target);
  }

  // optional .proto.PopSection household = 3;
  if (this->has_household()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->household_, false, target);
  }

  // optional .proto.PopSection k12school = 4;
  if (this->has_k12school()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, *this->k12school_, false, target);
  }

  // optional .proto.PopSection college = 5;
  if (this->has_college()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        5, *this->college_, false, target);
  }

  // optional .proto.PopSection workplace = 6;
  if (this->has_workplace()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        6, *this->workplace_, false, target);
  }

  // optional .proto.PopSection primCom = 7;
  if (this->has_primcom()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        7, *this->primcom_, false, target);
  }

  // optional .proto.PopSection secCom = 8;
  if (this->has_seccom()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        8, *this->seccom_, false, target);
  }

  // optional .proto.PopSection daycare = 9;
  if (this->has_daycare()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        9, *this->daycare_, false, target);
  }

  // optional .proto.PopSection preschool = 10;
  if (this->has_preschool()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        10, *this->preschool_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:proto.Location)
  return target;
}

int Location::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:proto.Location)
  int total_size = 0;

  // optional string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // optional .proto.Coordinate coord = 2;
  if (this->has_coord()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->coord_);
  }

  // optional .proto.PopSection household = 3;
  if (this->has_household()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->household_);
  }

  // optional .proto.PopSection k12school = 4;
  if (this->has_k12school()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->k12school_);
  }

  // optional .proto.PopSection college = 5;
  if (this->has_college()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->college_);
  }

  // optional .proto.PopSection workplace = 6;
  if (this->has_workplace()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->workplace_);
  }

  // optional .proto.PopSection primCom = 7;
  if (this->has_primcom()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->primcom_);
  }

  // optional .proto.PopSection secCom = 8;
  if (this->has_seccom()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->seccom_);
  }

  // optional .proto.PopSection daycare = 9;
  if (this->has_daycare()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->daycare_);
  }

  // optional .proto.PopSection preschool = 10;
  if (this->has_preschool()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->preschool_);
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Location::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.Location)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Location* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Location>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.Location)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.Location)
    MergeFrom(*source);
  }
}

void Location::MergeFrom(const Location& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.Location)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.has_coord()) {
    mutable_coord()->::proto::Coordinate::MergeFrom(from.coord());
  }
  if (from.has_household()) {
    mutable_household()->::proto::PopSection::MergeFrom(from.household());
  }
  if (from.has_k12school()) {
    mutable_k12school()->::proto::PopSection::MergeFrom(from.k12school());
  }
  if (from.has_college()) {
    mutable_college()->::proto::PopSection::MergeFrom(from.college());
  }
  if (from.has_workplace()) {
    mutable_workplace()->::proto::PopSection::MergeFrom(from.workplace());
  }
  if (from.has_primcom()) {
    mutable_primcom()->::proto::PopSection::MergeFrom(from.primcom());
  }
  if (from.has_seccom()) {
    mutable_seccom()->::proto::PopSection::MergeFrom(from.seccom());
  }
  if (from.has_daycare()) {
    mutable_daycare()->::proto::PopSection::MergeFrom(from.daycare());
  }
  if (from.has_preschool()) {
    mutable_preschool()->::proto::PopSection::MergeFrom(from.preschool());
  }
}

void Location::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.Location)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Location::CopyFrom(const Location& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.Location)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Location::IsInitialized() const {

  return true;
}

void Location::Swap(Location* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Location::InternalSwap(Location* other) {
  name_.Swap(&other->name_);
  std::swap(coord_, other->coord_);
  std::swap(household_, other->household_);
  std::swap(k12school_, other->k12school_);
  std::swap(college_, other->college_);
  std::swap(workplace_, other->workplace_);
  std::swap(primcom_, other->primcom_);
  std::swap(seccom_, other->seccom_);
  std::swap(daycare_, other->daycare_);
  std::swap(preschool_, other->preschool_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Location::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Location_descriptor_;
  metadata.reflection = Location_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Location

// optional string name = 1;
void Location::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& Location::name() const {
  // @@protoc_insertion_point(field_get:proto.Location.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Location::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.Location.name)
}
 void Location::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.Location.name)
}
 void Location::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.Location.name)
}
 ::std::string* Location::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:proto.Location.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Location::release_name() {
  // @@protoc_insertion_point(field_release:proto.Location.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Location::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:proto.Location.name)
}

// optional .proto.Coordinate coord = 2;
bool Location::has_coord() const {
  return !_is_default_instance_ && coord_ != NULL;
}
void Location::clear_coord() {
  if (GetArenaNoVirtual() == NULL && coord_ != NULL) delete coord_;
  coord_ = NULL;
}
const ::proto::Coordinate& Location::coord() const {
  // @@protoc_insertion_point(field_get:proto.Location.coord)
  return coord_ != NULL ? *coord_ : *default_instance_->coord_;
}
::proto::Coordinate* Location::mutable_coord() {
  
  if (coord_ == NULL) {
    coord_ = new ::proto::Coordinate;
  }
  // @@protoc_insertion_point(field_mutable:proto.Location.coord)
  return coord_;
}
::proto::Coordinate* Location::release_coord() {
  // @@protoc_insertion_point(field_release:proto.Location.coord)
  
  ::proto::Coordinate* temp = coord_;
  coord_ = NULL;
  return temp;
}
void Location::set_allocated_coord(::proto::Coordinate* coord) {
  delete coord_;
  coord_ = coord;
  if (coord) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.Location.coord)
}

// optional .proto.PopSection household = 3;
bool Location::has_household() const {
  return !_is_default_instance_ && household_ != NULL;
}
void Location::clear_household() {
  if (GetArenaNoVirtual() == NULL && household_ != NULL) delete household_;
  household_ = NULL;
}
const ::proto::PopSection& Location::household() const {
  // @@protoc_insertion_point(field_get:proto.Location.household)
  return household_ != NULL ? *household_ : *default_instance_->household_;
}
::proto::PopSection* Location::mutable_household() {
  
  if (household_ == NULL) {
    household_ = new ::proto::PopSection;
  }
  // @@protoc_insertion_point(field_mutable:proto.Location.household)
  return household_;
}
::proto::PopSection* Location::release_household() {
  // @@protoc_insertion_point(field_release:proto.Location.household)
  
  ::proto::PopSection* temp = household_;
  household_ = NULL;
  return temp;
}
void Location::set_allocated_household(::proto::PopSection* household) {
  delete household_;
  household_ = household;
  if (household) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.Location.household)
}

// optional .proto.PopSection k12school = 4;
bool Location::has_k12school() const {
  return !_is_default_instance_ && k12school_ != NULL;
}
void Location::clear_k12school() {
  if (GetArenaNoVirtual() == NULL && k12school_ != NULL) delete k12school_;
  k12school_ = NULL;
}
const ::proto::PopSection& Location::k12school() const {
  // @@protoc_insertion_point(field_get:proto.Location.k12school)
  return k12school_ != NULL ? *k12school_ : *default_instance_->k12school_;
}
::proto::PopSection* Location::mutable_k12school() {
  
  if (k12school_ == NULL) {
    k12school_ = new ::proto::PopSection;
  }
  // @@protoc_insertion_point(field_mutable:proto.Location.k12school)
  return k12school_;
}
::proto::PopSection* Location::release_k12school() {
  // @@protoc_insertion_point(field_release:proto.Location.k12school)
  
  ::proto::PopSection* temp = k12school_;
  k12school_ = NULL;
  return temp;
}
void Location::set_allocated_k12school(::proto::PopSection* k12school) {
  delete k12school_;
  k12school_ = k12school;
  if (k12school) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.Location.k12school)
}

// optional .proto.PopSection college = 5;
bool Location::has_college() const {
  return !_is_default_instance_ && college_ != NULL;
}
void Location::clear_college() {
  if (GetArenaNoVirtual() == NULL && college_ != NULL) delete college_;
  college_ = NULL;
}
const ::proto::PopSection& Location::college() const {
  // @@protoc_insertion_point(field_get:proto.Location.college)
  return college_ != NULL ? *college_ : *default_instance_->college_;
}
::proto::PopSection* Location::mutable_college() {
  
  if (college_ == NULL) {
    college_ = new ::proto::PopSection;
  }
  // @@protoc_insertion_point(field_mutable:proto.Location.college)
  return college_;
}
::proto::PopSection* Location::release_college() {
  // @@protoc_insertion_point(field_release:proto.Location.college)
  
  ::proto::PopSection* temp = college_;
  college_ = NULL;
  return temp;
}
void Location::set_allocated_college(::proto::PopSection* college) {
  delete college_;
  college_ = college;
  if (college) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.Location.college)
}

// optional .proto.PopSection workplace = 6;
bool Location::has_workplace() const {
  return !_is_default_instance_ && workplace_ != NULL;
}
void Location::clear_workplace() {
  if (GetArenaNoVirtual() == NULL && workplace_ != NULL) delete workplace_;
  workplace_ = NULL;
}
const ::proto::PopSection& Location::workplace() const {
  // @@protoc_insertion_point(field_get:proto.Location.workplace)
  return workplace_ != NULL ? *workplace_ : *default_instance_->workplace_;
}
::proto::PopSection* Location::mutable_workplace() {
  
  if (workplace_ == NULL) {
    workplace_ = new ::proto::PopSection;
  }
  // @@protoc_insertion_point(field_mutable:proto.Location.workplace)
  return workplace_;
}
::proto::PopSection* Location::release_workplace() {
  // @@protoc_insertion_point(field_release:proto.Location.workplace)
  
  ::proto::PopSection* temp = workplace_;
  workplace_ = NULL;
  return temp;
}
void Location::set_allocated_workplace(::proto::PopSection* workplace) {
  delete workplace_;
  workplace_ = workplace;
  if (workplace) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.Location.workplace)
}

// optional .proto.PopSection primCom = 7;
bool Location::has_primcom() const {
  return !_is_default_instance_ && primcom_ != NULL;
}
void Location::clear_primcom() {
  if (GetArenaNoVirtual() == NULL && primcom_ != NULL) delete primcom_;
  primcom_ = NULL;
}
const ::proto::PopSection& Location::primcom() const {
  // @@protoc_insertion_point(field_get:proto.Location.primCom)
  return primcom_ != NULL ? *primcom_ : *default_instance_->primcom_;
}
::proto::PopSection* Location::mutable_primcom() {
  
  if (primcom_ == NULL) {
    primcom_ = new ::proto::PopSection;
  }
  // @@protoc_insertion_point(field_mutable:proto.Location.primCom)
  return primcom_;
}
::proto::PopSection* Location::release_primcom() {
  // @@protoc_insertion_point(field_release:proto.Location.primCom)
  
  ::proto::PopSection* temp = primcom_;
  primcom_ = NULL;
  return temp;
}
void Location::set_allocated_primcom(::proto::PopSection* primcom) {
  delete primcom_;
  primcom_ = primcom;
  if (primcom) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.Location.primCom)
}

// optional .proto.PopSection secCom = 8;
bool Location::has_seccom() const {
  return !_is_default_instance_ && seccom_ != NULL;
}
void Location::clear_seccom() {
  if (GetArenaNoVirtual() == NULL && seccom_ != NULL) delete seccom_;
  seccom_ = NULL;
}
const ::proto::PopSection& Location::seccom() const {
  // @@protoc_insertion_point(field_get:proto.Location.secCom)
  return seccom_ != NULL ? *seccom_ : *default_instance_->seccom_;
}
::proto::PopSection* Location::mutable_seccom() {
  
  if (seccom_ == NULL) {
    seccom_ = new ::proto::PopSection;
  }
  // @@protoc_insertion_point(field_mutable:proto.Location.secCom)
  return seccom_;
}
::proto::PopSection* Location::release_seccom() {
  // @@protoc_insertion_point(field_release:proto.Location.secCom)
  
  ::proto::PopSection* temp = seccom_;
  seccom_ = NULL;
  return temp;
}
void Location::set_allocated_seccom(::proto::PopSection* seccom) {
  delete seccom_;
  seccom_ = seccom;
  if (seccom) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.Location.secCom)
}

// optional .proto.PopSection daycare = 9;
bool Location::has_daycare() const {
  return !_is_default_instance_ && daycare_ != NULL;
}
void Location::clear_daycare() {
  if (GetArenaNoVirtual() == NULL && daycare_ != NULL) delete daycare_;
  daycare_ = NULL;
}
const ::proto::PopSection& Location::daycare() const {
  // @@protoc_insertion_point(field_get:proto.Location.daycare)
  return daycare_ != NULL ? *daycare_ : *default_instance_->daycare_;
}
::proto::PopSection* Location::mutable_daycare() {
  
  if (daycare_ == NULL) {
    daycare_ = new ::proto::PopSection;
  }
  // @@protoc_insertion_point(field_mutable:proto.Location.daycare)
  return daycare_;
}
::proto::PopSection* Location::release_daycare() {
  // @@protoc_insertion_point(field_release:proto.Location.daycare)
  
  ::proto::PopSection* temp = daycare_;
  daycare_ = NULL;
  return temp;
}
void Location::set_allocated_daycare(::proto::PopSection* daycare) {
  delete daycare_;
  daycare_ = daycare;
  if (daycare) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.Location.daycare)
}

// optional .proto.PopSection preschool = 10;
bool Location::has_preschool() const {
  return !_is_default_instance_ && preschool_ != NULL;
}
void Location::clear_preschool() {
  if (GetArenaNoVirtual() == NULL && preschool_ != NULL) delete preschool_;
  preschool_ = NULL;
}
const ::proto::PopSection& Location::preschool() const {
  // @@protoc_insertion_point(field_get:proto.Location.preschool)
  return preschool_ != NULL ? *preschool_ : *default_instance_->preschool_;
}
::proto::PopSection* Location::mutable_preschool() {
  
  if (preschool_ == NULL) {
    preschool_ = new ::proto::PopSection;
  }
  // @@protoc_insertion_point(field_mutable:proto.Location.preschool)
  return preschool_;
}
::proto::PopSection* Location::release_preschool() {
  // @@protoc_insertion_point(field_release:proto.Location.preschool)
  
  ::proto::PopSection* temp = preschool_;
  preschool_ = NULL;
  return temp;
}
void Location::set_allocated_preschool(::proto::PopSection* preschool) {
  delete preschool_;
  preschool_ = preschool;
  if (preschool) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.Location.preschool)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Coordinate::kLongitudeFieldNumber;
const int Coordinate::kLatitudeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Coordinate::Coordinate()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.Coordinate)
}

void Coordinate::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

Coordinate::Coordinate(const Coordinate& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:proto.Coordinate)
}

void Coordinate::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  longitude_ = 0;
  latitude_ = 0;
}

Coordinate::~Coordinate() {
  // @@protoc_insertion_point(destructor:proto.Coordinate)
  SharedDtor();
}

void Coordinate::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Coordinate::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Coordinate::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Coordinate_descriptor_;
}

const Coordinate& Coordinate::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtobufEpiFormat_2eproto();
  return *default_instance_;
}

Coordinate* Coordinate::default_instance_ = NULL;

Coordinate* Coordinate::New(::google::protobuf::Arena* arena) const {
  Coordinate* n = new Coordinate;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Coordinate::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.Coordinate)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(Coordinate, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<Coordinate*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(longitude_, latitude_);

#undef ZR_HELPER_
#undef ZR_

}

bool Coordinate::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.Coordinate)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional double longitude = 1;
      case 1: {
        if (tag == 9) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &longitude_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(17)) goto parse_latitude;
        break;
      }

      // optional double latitude = 2;
      case 2: {
        if (tag == 17) {
         parse_latitude:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &latitude_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.Coordinate)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.Coordinate)
  return false;
#undef DO_
}

void Coordinate::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.Coordinate)
  // optional double longitude = 1;
  if (this->longitude() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->longitude(), output);
  }

  // optional double latitude = 2;
  if (this->latitude() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->latitude(), output);
  }

  // @@protoc_insertion_point(serialize_end:proto.Coordinate)
}

::google::protobuf::uint8* Coordinate::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.Coordinate)
  // optional double longitude = 1;
  if (this->longitude() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(1, this->longitude(), target);
  }

  // optional double latitude = 2;
  if (this->latitude() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->latitude(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:proto.Coordinate)
  return target;
}

int Coordinate::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:proto.Coordinate)
  int total_size = 0;

  // optional double longitude = 1;
  if (this->longitude() != 0) {
    total_size += 1 + 8;
  }

  // optional double latitude = 2;
  if (this->latitude() != 0) {
    total_size += 1 + 8;
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Coordinate::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.Coordinate)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Coordinate* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Coordinate>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.Coordinate)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.Coordinate)
    MergeFrom(*source);
  }
}

void Coordinate::MergeFrom(const Coordinate& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.Coordinate)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.longitude() != 0) {
    set_longitude(from.longitude());
  }
  if (from.latitude() != 0) {
    set_latitude(from.latitude());
  }
}

void Coordinate::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.Coordinate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Coordinate::CopyFrom(const Coordinate& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.Coordinate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Coordinate::IsInitialized() const {

  return true;
}

void Coordinate::Swap(Coordinate* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Coordinate::InternalSwap(Coordinate* other) {
  std::swap(longitude_, other->longitude_);
  std::swap(latitude_, other->latitude_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Coordinate::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Coordinate_descriptor_;
  metadata.reflection = Coordinate_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Coordinate

// optional double longitude = 1;
void Coordinate::clear_longitude() {
  longitude_ = 0;
}
 double Coordinate::longitude() const {
  // @@protoc_insertion_point(field_get:proto.Coordinate.longitude)
  return longitude_;
}
 void Coordinate::set_longitude(double value) {
  
  longitude_ = value;
  // @@protoc_insertion_point(field_set:proto.Coordinate.longitude)
}

// optional double latitude = 2;
void Coordinate::clear_latitude() {
  latitude_ = 0;
}
 double Coordinate::latitude() const {
  // @@protoc_insertion_point(field_get:proto.Coordinate.latitude)
  return latitude_;
}
 void Coordinate::set_latitude(double value) {
  
  latitude_ = value;
  // @@protoc_insertion_point(field_set:proto.Coordinate.latitude)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PopSection::kPopulationFieldNumber;
const int PopSection::kImmuneFieldNumber;
const int PopSection::kInfectedFieldNumber;
const int PopSection::kInfectiousFieldNumber;
const int PopSection::kRecoveredFieldNumber;
const int PopSection::kSusceptibleFieldNumber;
const int PopSection::kSymptomaticFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PopSection::PopSection()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.PopSection)
}

void PopSection::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

PopSection::PopSection(const PopSection& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:proto.PopSection)
}

void PopSection::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  population_ = 0u;
  immune_ = 0;
  infected_ = 0;
  infectious_ = 0;
  recovered_ = 0;
  susceptible_ = 0;
  symptomatic_ = 0;
}

PopSection::~PopSection() {
  // @@protoc_insertion_point(destructor:proto.PopSection)
  SharedDtor();
}

void PopSection::SharedDtor() {
  if (this != default_instance_) {
  }
}

void PopSection::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PopSection::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PopSection_descriptor_;
}

const PopSection& PopSection::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtobufEpiFormat_2eproto();
  return *default_instance_;
}

PopSection* PopSection::default_instance_ = NULL;

PopSection* PopSection::New(::google::protobuf::Arena* arena) const {
  PopSection* n = new PopSection;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PopSection::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.PopSection)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(PopSection, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<PopSection*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(immune_, population_);

#undef ZR_HELPER_
#undef ZR_

}

bool PopSection::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.PopSection)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 population = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &population_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(17)) goto parse_immune;
        break;
      }

      // optional double immune = 2;
      case 2: {
        if (tag == 17) {
         parse_immune:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &immune_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(25)) goto parse_infected;
        break;
      }

      // optional double infected = 3;
      case 3: {
        if (tag == 25) {
         parse_infected:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &infected_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(33)) goto parse_infectious;
        break;
      }

      // optional double infectious = 4;
      case 4: {
        if (tag == 33) {
         parse_infectious:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &infectious_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(41)) goto parse_recovered;
        break;
      }

      // optional double recovered = 5;
      case 5: {
        if (tag == 41) {
         parse_recovered:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &recovered_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(49)) goto parse_susceptible;
        break;
      }

      // optional double susceptible = 6;
      case 6: {
        if (tag == 49) {
         parse_susceptible:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &susceptible_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(57)) goto parse_symptomatic;
        break;
      }

      // optional double symptomatic = 7;
      case 7: {
        if (tag == 57) {
         parse_symptomatic:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &symptomatic_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.PopSection)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.PopSection)
  return false;
#undef DO_
}

void PopSection::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.PopSection)
  // optional uint32 population = 1;
  if (this->population() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->population(), output);
  }

  // optional double immune = 2;
  if (this->immune() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->immune(), output);
  }

  // optional double infected = 3;
  if (this->infected() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(3, this->infected(), output);
  }

  // optional double infectious = 4;
  if (this->infectious() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(4, this->infectious(), output);
  }

  // optional double recovered = 5;
  if (this->recovered() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(5, this->recovered(), output);
  }

  // optional double susceptible = 6;
  if (this->susceptible() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(6, this->susceptible(), output);
  }

  // optional double symptomatic = 7;
  if (this->symptomatic() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(7, this->symptomatic(), output);
  }

  // @@protoc_insertion_point(serialize_end:proto.PopSection)
}

::google::protobuf::uint8* PopSection::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.PopSection)
  // optional uint32 population = 1;
  if (this->population() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->population(), target);
  }

  // optional double immune = 2;
  if (this->immune() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->immune(), target);
  }

  // optional double infected = 3;
  if (this->infected() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(3, this->infected(), target);
  }

  // optional double infectious = 4;
  if (this->infectious() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(4, this->infectious(), target);
  }

  // optional double recovered = 5;
  if (this->recovered() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(5, this->recovered(), target);
  }

  // optional double susceptible = 6;
  if (this->susceptible() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(6, this->susceptible(), target);
  }

  // optional double symptomatic = 7;
  if (this->symptomatic() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(7, this->symptomatic(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:proto.PopSection)
  return target;
}

int PopSection::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:proto.PopSection)
  int total_size = 0;

  // optional uint32 population = 1;
  if (this->population() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->population());
  }

  // optional double immune = 2;
  if (this->immune() != 0) {
    total_size += 1 + 8;
  }

  // optional double infected = 3;
  if (this->infected() != 0) {
    total_size += 1 + 8;
  }

  // optional double infectious = 4;
  if (this->infectious() != 0) {
    total_size += 1 + 8;
  }

  // optional double recovered = 5;
  if (this->recovered() != 0) {
    total_size += 1 + 8;
  }

  // optional double susceptible = 6;
  if (this->susceptible() != 0) {
    total_size += 1 + 8;
  }

  // optional double symptomatic = 7;
  if (this->symptomatic() != 0) {
    total_size += 1 + 8;
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PopSection::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.PopSection)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const PopSection* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const PopSection>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.PopSection)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.PopSection)
    MergeFrom(*source);
  }
}

void PopSection::MergeFrom(const PopSection& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.PopSection)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.population() != 0) {
    set_population(from.population());
  }
  if (from.immune() != 0) {
    set_immune(from.immune());
  }
  if (from.infected() != 0) {
    set_infected(from.infected());
  }
  if (from.infectious() != 0) {
    set_infectious(from.infectious());
  }
  if (from.recovered() != 0) {
    set_recovered(from.recovered());
  }
  if (from.susceptible() != 0) {
    set_susceptible(from.susceptible());
  }
  if (from.symptomatic() != 0) {
    set_symptomatic(from.symptomatic());
  }
}

void PopSection::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.PopSection)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PopSection::CopyFrom(const PopSection& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.PopSection)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PopSection::IsInitialized() const {

  return true;
}

void PopSection::Swap(PopSection* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PopSection::InternalSwap(PopSection* other) {
  std::swap(population_, other->population_);
  std::swap(immune_, other->immune_);
  std::swap(infected_, other->infected_);
  std::swap(infectious_, other->infectious_);
  std::swap(recovered_, other->recovered_);
  std::swap(susceptible_, other->susceptible_);
  std::swap(symptomatic_, other->symptomatic_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PopSection::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PopSection_descriptor_;
  metadata.reflection = PopSection_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PopSection

// optional uint32 population = 1;
void PopSection::clear_population() {
  population_ = 0u;
}
 ::google::protobuf::uint32 PopSection::population() const {
  // @@protoc_insertion_point(field_get:proto.PopSection.population)
  return population_;
}
 void PopSection::set_population(::google::protobuf::uint32 value) {
  
  population_ = value;
  // @@protoc_insertion_point(field_set:proto.PopSection.population)
}

// optional double immune = 2;
void PopSection::clear_immune() {
  immune_ = 0;
}
 double PopSection::immune() const {
  // @@protoc_insertion_point(field_get:proto.PopSection.immune)
  return immune_;
}
 void PopSection::set_immune(double value) {
  
  immune_ = value;
  // @@protoc_insertion_point(field_set:proto.PopSection.immune)
}

// optional double infected = 3;
void PopSection::clear_infected() {
  infected_ = 0;
}
 double PopSection::infected() const {
  // @@protoc_insertion_point(field_get:proto.PopSection.infected)
  return infected_;
}
 void PopSection::set_infected(double value) {
  
  infected_ = value;
  // @@protoc_insertion_point(field_set:proto.PopSection.infected)
}

// optional double infectious = 4;
void PopSection::clear_infectious() {
  infectious_ = 0;
}
 double PopSection::infectious() const {
  // @@protoc_insertion_point(field_get:proto.PopSection.infectious)
  return infectious_;
}
 void PopSection::set_infectious(double value) {
  
  infectious_ = value;
  // @@protoc_insertion_point(field_set:proto.PopSection.infectious)
}

// optional double recovered = 5;
void PopSection::clear_recovered() {
  recovered_ = 0;
}
 double PopSection::recovered() const {
  // @@protoc_insertion_point(field_get:proto.PopSection.recovered)
  return recovered_;
}
 void PopSection::set_recovered(double value) {
  
  recovered_ = value;
  // @@protoc_insertion_point(field_set:proto.PopSection.recovered)
}

// optional double susceptible = 6;
void PopSection::clear_susceptible() {
  susceptible_ = 0;
}
 double PopSection::susceptible() const {
  // @@protoc_insertion_point(field_get:proto.PopSection.susceptible)
  return susceptible_;
}
 void PopSection::set_susceptible(double value) {
  
  susceptible_ = value;
  // @@protoc_insertion_point(field_set:proto.PopSection.susceptible)
}

// optional double symptomatic = 7;
void PopSection::clear_symptomatic() {
  symptomatic_ = 0;
}
 double PopSection::symptomatic() const {
  // @@protoc_insertion_point(field_get:proto.PopSection.symptomatic)
  return symptomatic_;
}
 void PopSection::set_symptomatic(double value) {
  
  symptomatic_ = value;
  // @@protoc_insertion_point(field_set:proto.PopSection.symptomatic)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace proto

// @@protoc_insertion_point(global_scope)
