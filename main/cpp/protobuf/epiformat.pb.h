// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: epiformat.proto

#ifndef PROTOBUF_INCLUDED_ProtobufEpiFormat_2eproto
#define PROTOBUF_INCLUDED_ProtobufEpiFormat_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3007000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3007000 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_ProtobufEpiFormat_2eproto

// Internal implementation detail -- do not use these members.
struct TableStruct_ProtobufEpiFormat_2eproto {
  static const ::google::protobuf::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::ParseTable schema[5]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors_ProtobufEpiFormat_2eproto();
namespace proto {
class Coordinate;
class CoordinateDefaultTypeInternal;
extern CoordinateDefaultTypeInternal _Coordinate_default_instance_;
class EpiFile;
class EpiFileDefaultTypeInternal;
extern EpiFileDefaultTypeInternal _EpiFile_default_instance_;
class Location;
class LocationDefaultTypeInternal;
extern LocationDefaultTypeInternal _Location_default_instance_;
class PopSection;
class PopSectionDefaultTypeInternal;
extern PopSectionDefaultTypeInternal _PopSection_default_instance_;
class Timestep;
class TimestepDefaultTypeInternal;
extern TimestepDefaultTypeInternal _Timestep_default_instance_;
}  // namespace proto
namespace google {
namespace protobuf {
template<> ::proto::Coordinate* Arena::CreateMaybeMessage<::proto::Coordinate>(Arena*);
template<> ::proto::EpiFile* Arena::CreateMaybeMessage<::proto::EpiFile>(Arena*);
template<> ::proto::Location* Arena::CreateMaybeMessage<::proto::Location>(Arena*);
template<> ::proto::PopSection* Arena::CreateMaybeMessage<::proto::PopSection>(Arena*);
template<> ::proto::Timestep* Arena::CreateMaybeMessage<::proto::Timestep>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace proto {

// ===================================================================

class EpiFile final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.EpiFile) */ {
 public:
  EpiFile();
  virtual ~EpiFile();

  EpiFile(const EpiFile& from);

  inline EpiFile& operator=(const EpiFile& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  EpiFile(EpiFile&& from) noexcept
    : EpiFile() {
    *this = ::std::move(from);
  }

  inline EpiFile& operator=(EpiFile&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const EpiFile& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const EpiFile* internal_default_instance() {
    return reinterpret_cast<const EpiFile*>(
               &_EpiFile_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(EpiFile* other);
  friend void swap(EpiFile& a, EpiFile& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline EpiFile* New() const final {
    return CreateMaybeMessage<EpiFile>(nullptr);
  }

  EpiFile* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<EpiFile>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const EpiFile& from);
  void MergeFrom(const EpiFile& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(EpiFile* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto.Timestep timesteps = 1;
  int timesteps_size() const;
  void clear_timesteps();
  static const int kTimestepsFieldNumber = 1;
  ::proto::Timestep* mutable_timesteps(int index);
  ::google::protobuf::RepeatedPtrField< ::proto::Timestep >*
      mutable_timesteps();
  const ::proto::Timestep& timesteps(int index) const;
  ::proto::Timestep* add_timesteps();
  const ::google::protobuf::RepeatedPtrField< ::proto::Timestep >&
      timesteps() const;

  // @@protoc_insertion_point(class_scope:proto.EpiFile)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::proto::Timestep > timesteps_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_ProtobufEpiFormat_2eproto;
};
// -------------------------------------------------------------------

class Timestep final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.Timestep) */ {
 public:
  Timestep();
  virtual ~Timestep();

  Timestep(const Timestep& from);

  inline Timestep& operator=(const Timestep& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Timestep(Timestep&& from) noexcept
    : Timestep() {
    *this = ::std::move(from);
  }

  inline Timestep& operator=(Timestep&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const Timestep& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Timestep* internal_default_instance() {
    return reinterpret_cast<const Timestep*>(
               &_Timestep_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(Timestep* other);
  friend void swap(Timestep& a, Timestep& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Timestep* New() const final {
    return CreateMaybeMessage<Timestep>(nullptr);
  }

  Timestep* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Timestep>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Timestep& from);
  void MergeFrom(const Timestep& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Timestep* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto.Location locations = 1;
  int locations_size() const;
  void clear_locations();
  static const int kLocationsFieldNumber = 1;
  ::proto::Location* mutable_locations(int index);
  ::google::protobuf::RepeatedPtrField< ::proto::Location >*
      mutable_locations();
  const ::proto::Location& locations(int index) const;
  ::proto::Location* add_locations();
  const ::google::protobuf::RepeatedPtrField< ::proto::Location >&
      locations() const;

  // @@protoc_insertion_point(class_scope:proto.Timestep)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::proto::Location > locations_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_ProtobufEpiFormat_2eproto;
};
// -------------------------------------------------------------------

class Location final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.Location) */ {
 public:
  Location();
  virtual ~Location();

  Location(const Location& from);

  inline Location& operator=(const Location& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Location(Location&& from) noexcept
    : Location() {
    *this = ::std::move(from);
  }

  inline Location& operator=(Location&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const Location& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Location* internal_default_instance() {
    return reinterpret_cast<const Location*>(
               &_Location_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(Location* other);
  friend void swap(Location& a, Location& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Location* New() const final {
    return CreateMaybeMessage<Location>(nullptr);
  }

  Location* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Location>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Location& from);
  void MergeFrom(const Location& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Location* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string name = 1;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // .proto.Coordinate coord = 2;
  bool has_coord() const;
  void clear_coord();
  static const int kCoordFieldNumber = 2;
  const ::proto::Coordinate& coord() const;
  ::proto::Coordinate* release_coord();
  ::proto::Coordinate* mutable_coord();
  void set_allocated_coord(::proto::Coordinate* coord);

  // .proto.PopSection household = 3;
  bool has_household() const;
  void clear_household();
  static const int kHouseholdFieldNumber = 3;
  const ::proto::PopSection& household() const;
  ::proto::PopSection* release_household();
  ::proto::PopSection* mutable_household();
  void set_allocated_household(::proto::PopSection* household);

  // .proto.PopSection k12school = 4;
  bool has_k12school() const;
  void clear_k12school();
  static const int kK12SchoolFieldNumber = 4;
  const ::proto::PopSection& k12school() const;
  ::proto::PopSection* release_k12school();
  ::proto::PopSection* mutable_k12school();
  void set_allocated_k12school(::proto::PopSection* k12school);

  // .proto.PopSection college = 5;
  bool has_college() const;
  void clear_college();
  static const int kCollegeFieldNumber = 5;
  const ::proto::PopSection& college() const;
  ::proto::PopSection* release_college();
  ::proto::PopSection* mutable_college();
  void set_allocated_college(::proto::PopSection* college);

  // .proto.PopSection workplace = 6;
  bool has_workplace() const;
  void clear_workplace();
  static const int kWorkplaceFieldNumber = 6;
  const ::proto::PopSection& workplace() const;
  ::proto::PopSection* release_workplace();
  ::proto::PopSection* mutable_workplace();
  void set_allocated_workplace(::proto::PopSection* workplace);

  // .proto.PopSection primCom = 7;
  bool has_primcom() const;
  void clear_primcom();
  static const int kPrimComFieldNumber = 7;
  const ::proto::PopSection& primcom() const;
  ::proto::PopSection* release_primcom();
  ::proto::PopSection* mutable_primcom();
  void set_allocated_primcom(::proto::PopSection* primcom);

  // .proto.PopSection secCom = 8;
  bool has_seccom() const;
  void clear_seccom();
  static const int kSecComFieldNumber = 8;
  const ::proto::PopSection& seccom() const;
  ::proto::PopSection* release_seccom();
  ::proto::PopSection* mutable_seccom();
  void set_allocated_seccom(::proto::PopSection* seccom);

  // .proto.PopSection daycare = 9;
  bool has_daycare() const;
  void clear_daycare();
  static const int kDaycareFieldNumber = 9;
  const ::proto::PopSection& daycare() const;
  ::proto::PopSection* release_daycare();
  ::proto::PopSection* mutable_daycare();
  void set_allocated_daycare(::proto::PopSection* daycare);

  // .proto.PopSection preschool = 10;
  bool has_preschool() const;
  void clear_preschool();
  static const int kPreschoolFieldNumber = 10;
  const ::proto::PopSection& preschool() const;
  ::proto::PopSection* release_preschool();
  ::proto::PopSection* mutable_preschool();
  void set_allocated_preschool(::proto::PopSection* preschool);

  // @@protoc_insertion_point(class_scope:proto.Location)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::proto::Coordinate* coord_;
  ::proto::PopSection* household_;
  ::proto::PopSection* k12school_;
  ::proto::PopSection* college_;
  ::proto::PopSection* workplace_;
  ::proto::PopSection* primcom_;
  ::proto::PopSection* seccom_;
  ::proto::PopSection* daycare_;
  ::proto::PopSection* preschool_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_ProtobufEpiFormat_2eproto;
};
// -------------------------------------------------------------------

class Coordinate final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.Coordinate) */ {
 public:
  Coordinate();
  virtual ~Coordinate();

  Coordinate(const Coordinate& from);

  inline Coordinate& operator=(const Coordinate& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Coordinate(Coordinate&& from) noexcept
    : Coordinate() {
    *this = ::std::move(from);
  }

  inline Coordinate& operator=(Coordinate&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const Coordinate& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Coordinate* internal_default_instance() {
    return reinterpret_cast<const Coordinate*>(
               &_Coordinate_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  void Swap(Coordinate* other);
  friend void swap(Coordinate& a, Coordinate& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Coordinate* New() const final {
    return CreateMaybeMessage<Coordinate>(nullptr);
  }

  Coordinate* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Coordinate>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Coordinate& from);
  void MergeFrom(const Coordinate& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Coordinate* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // double longitude = 1;
  void clear_longitude();
  static const int kLongitudeFieldNumber = 1;
  double longitude() const;
  void set_longitude(double value);

  // double latitude = 2;
  void clear_latitude();
  static const int kLatitudeFieldNumber = 2;
  double latitude() const;
  void set_latitude(double value);

  // @@protoc_insertion_point(class_scope:proto.Coordinate)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  double longitude_;
  double latitude_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_ProtobufEpiFormat_2eproto;
};
// -------------------------------------------------------------------

class PopSection final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.PopSection) */ {
 public:
  PopSection();
  virtual ~PopSection();

  PopSection(const PopSection& from);

  inline PopSection& operator=(const PopSection& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PopSection(PopSection&& from) noexcept
    : PopSection() {
    *this = ::std::move(from);
  }

  inline PopSection& operator=(PopSection&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const PopSection& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PopSection* internal_default_instance() {
    return reinterpret_cast<const PopSection*>(
               &_PopSection_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  void Swap(PopSection* other);
  friend void swap(PopSection& a, PopSection& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PopSection* New() const final {
    return CreateMaybeMessage<PopSection>(nullptr);
  }

  PopSection* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<PopSection>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const PopSection& from);
  void MergeFrom(const PopSection& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PopSection* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // double immune = 2;
  void clear_immune();
  static const int kImmuneFieldNumber = 2;
  double immune() const;
  void set_immune(double value);

  // double infected = 3;
  void clear_infected();
  static const int kInfectedFieldNumber = 3;
  double infected() const;
  void set_infected(double value);

  // double infectious = 4;
  void clear_infectious();
  static const int kInfectiousFieldNumber = 4;
  double infectious() const;
  void set_infectious(double value);

  // double recovered = 5;
  void clear_recovered();
  static const int kRecoveredFieldNumber = 5;
  double recovered() const;
  void set_recovered(double value);

  // double susceptible = 6;
  void clear_susceptible();
  static const int kSusceptibleFieldNumber = 6;
  double susceptible() const;
  void set_susceptible(double value);

  // double symptomatic = 7;
  void clear_symptomatic();
  static const int kSymptomaticFieldNumber = 7;
  double symptomatic() const;
  void set_symptomatic(double value);

  // uint32 population = 1;
  void clear_population();
  static const int kPopulationFieldNumber = 1;
  ::google::protobuf::uint32 population() const;
  void set_population(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.PopSection)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  double immune_;
  double infected_;
  double infectious_;
  double recovered_;
  double susceptible_;
  double symptomatic_;
  ::google::protobuf::uint32 population_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_ProtobufEpiFormat_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// EpiFile

// repeated .proto.Timestep timesteps = 1;
inline int EpiFile::timesteps_size() const {
  return timesteps_.size();
}
inline void EpiFile::clear_timesteps() {
  timesteps_.Clear();
}
inline ::proto::Timestep* EpiFile::mutable_timesteps(int index) {
  // @@protoc_insertion_point(field_mutable:proto.EpiFile.timesteps)
  return timesteps_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::proto::Timestep >*
EpiFile::mutable_timesteps() {
  // @@protoc_insertion_point(field_mutable_list:proto.EpiFile.timesteps)
  return &timesteps_;
}
inline const ::proto::Timestep& EpiFile::timesteps(int index) const {
  // @@protoc_insertion_point(field_get:proto.EpiFile.timesteps)
  return timesteps_.Get(index);
}
inline ::proto::Timestep* EpiFile::add_timesteps() {
  // @@protoc_insertion_point(field_add:proto.EpiFile.timesteps)
  return timesteps_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::Timestep >&
EpiFile::timesteps() const {
  // @@protoc_insertion_point(field_list:proto.EpiFile.timesteps)
  return timesteps_;
}

// -------------------------------------------------------------------

// Timestep

// repeated .proto.Location locations = 1;
inline int Timestep::locations_size() const {
  return locations_.size();
}
inline void Timestep::clear_locations() {
  locations_.Clear();
}
inline ::proto::Location* Timestep::mutable_locations(int index) {
  // @@protoc_insertion_point(field_mutable:proto.Timestep.locations)
  return locations_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::proto::Location >*
Timestep::mutable_locations() {
  // @@protoc_insertion_point(field_mutable_list:proto.Timestep.locations)
  return &locations_;
}
inline const ::proto::Location& Timestep::locations(int index) const {
  // @@protoc_insertion_point(field_get:proto.Timestep.locations)
  return locations_.Get(index);
}
inline ::proto::Location* Timestep::add_locations() {
  // @@protoc_insertion_point(field_add:proto.Timestep.locations)
  return locations_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::Location >&
Timestep::locations() const {
  // @@protoc_insertion_point(field_list:proto.Timestep.locations)
  return locations_;
}

// -------------------------------------------------------------------

// Location

// string name = 1;
inline void Location::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Location::name() const {
  // @@protoc_insertion_point(field_get:proto.Location.name)
  return name_.GetNoArena();
}
inline void Location::set_name(const ::std::string& value) {

  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.Location.name)
}
#if LANG_CXX11
inline void Location::set_name(::std::string&& value) {

  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.Location.name)
}
#endif
inline void Location::set_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);

  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.Location.name)
}
inline void Location::set_name(const char* value, size_t size) {

  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.Location.name)
}
inline ::std::string* Location::mutable_name() {

  // @@protoc_insertion_point(field_mutable:proto.Location.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Location::release_name() {
  // @@protoc_insertion_point(field_release:proto.Location.name)

  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Location::set_allocated_name(::std::string* name) {
  if (name != nullptr) {

  } else {

  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:proto.Location.name)
}

// .proto.Coordinate coord = 2;
inline bool Location::has_coord() const {
  return this != internal_default_instance() && coord_ != nullptr;
}
inline void Location::clear_coord() {
  if (GetArenaNoVirtual() == nullptr && coord_ != nullptr) {
    delete coord_;
  }
  coord_ = nullptr;
}
inline const ::proto::Coordinate& Location::coord() const {
  const ::proto::Coordinate* p = coord_;
  // @@protoc_insertion_point(field_get:proto.Location.coord)
  return p != nullptr ? *p : *reinterpret_cast<const ::proto::Coordinate*>(
      &::proto::_Coordinate_default_instance_);
}
inline ::proto::Coordinate* Location::release_coord() {
  // @@protoc_insertion_point(field_release:proto.Location.coord)

  ::proto::Coordinate* temp = coord_;
  coord_ = nullptr;
  return temp;
}
inline ::proto::Coordinate* Location::mutable_coord() {

  if (coord_ == nullptr) {
    auto* p = CreateMaybeMessage<::proto::Coordinate>(GetArenaNoVirtual());
    coord_ = p;
  }
  // @@protoc_insertion_point(field_mutable:proto.Location.coord)
  return coord_;
}
inline void Location::set_allocated_coord(::proto::Coordinate* coord) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete coord_;
  }
  if (coord) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      coord = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, coord, submessage_arena);
    }

  } else {

  }
  coord_ = coord;
  // @@protoc_insertion_point(field_set_allocated:proto.Location.coord)
}

// .proto.PopSection household = 3;
inline bool Location::has_household() const {
  return this != internal_default_instance() && household_ != nullptr;
}
inline void Location::clear_household() {
  if (GetArenaNoVirtual() == nullptr && household_ != nullptr) {
    delete household_;
  }
  household_ = nullptr;
}
inline const ::proto::PopSection& Location::household() const {
  const ::proto::PopSection* p = household_;
  // @@protoc_insertion_point(field_get:proto.Location.household)
  return p != nullptr ? *p : *reinterpret_cast<const ::proto::PopSection*>(
      &::proto::_PopSection_default_instance_);
}
inline ::proto::PopSection* Location::release_household() {
  // @@protoc_insertion_point(field_release:proto.Location.household)

  ::proto::PopSection* temp = household_;
  household_ = nullptr;
  return temp;
}
inline ::proto::PopSection* Location::mutable_household() {

  if (household_ == nullptr) {
    auto* p = CreateMaybeMessage<::proto::PopSection>(GetArenaNoVirtual());
    household_ = p;
  }
  // @@protoc_insertion_point(field_mutable:proto.Location.household)
  return household_;
}
inline void Location::set_allocated_household(::proto::PopSection* household) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete household_;
  }
  if (household) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      household = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, household, submessage_arena);
    }

  } else {

  }
  household_ = household;
  // @@protoc_insertion_point(field_set_allocated:proto.Location.household)
}

// .proto.PopSection k12school = 4;
inline bool Location::has_k12school() const {
  return this != internal_default_instance() && k12school_ != nullptr;
}
inline void Location::clear_k12school() {
  if (GetArenaNoVirtual() == nullptr && k12school_ != nullptr) {
    delete k12school_;
  }
  k12school_ = nullptr;
}
inline const ::proto::PopSection& Location::k12school() const {
  const ::proto::PopSection* p = k12school_;
  // @@protoc_insertion_point(field_get:proto.Location.k12school)
  return p != nullptr ? *p : *reinterpret_cast<const ::proto::PopSection*>(
      &::proto::_PopSection_default_instance_);
}
inline ::proto::PopSection* Location::release_k12school() {
  // @@protoc_insertion_point(field_release:proto.Location.k12school)

  ::proto::PopSection* temp = k12school_;
  k12school_ = nullptr;
  return temp;
}
inline ::proto::PopSection* Location::mutable_k12school() {

  if (k12school_ == nullptr) {
    auto* p = CreateMaybeMessage<::proto::PopSection>(GetArenaNoVirtual());
    k12school_ = p;
  }
  // @@protoc_insertion_point(field_mutable:proto.Location.k12school)
  return k12school_;
}
inline void Location::set_allocated_k12school(::proto::PopSection* k12school) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete k12school_;
  }
  if (k12school) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      k12school = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, k12school, submessage_arena);
    }

  } else {

  }
  k12school_ = k12school;
  // @@protoc_insertion_point(field_set_allocated:proto.Location.k12school)
}

// .proto.PopSection college = 5;
inline bool Location::has_college() const {
  return this != internal_default_instance() && college_ != nullptr;
}
inline void Location::clear_college() {
  if (GetArenaNoVirtual() == nullptr && college_ != nullptr) {
    delete college_;
  }
  college_ = nullptr;
}
inline const ::proto::PopSection& Location::college() const {
  const ::proto::PopSection* p = college_;
  // @@protoc_insertion_point(field_get:proto.Location.college)
  return p != nullptr ? *p : *reinterpret_cast<const ::proto::PopSection*>(
      &::proto::_PopSection_default_instance_);
}
inline ::proto::PopSection* Location::release_college() {
  // @@protoc_insertion_point(field_release:proto.Location.college)

  ::proto::PopSection* temp = college_;
  college_ = nullptr;
  return temp;
}
inline ::proto::PopSection* Location::mutable_college() {

  if (college_ == nullptr) {
    auto* p = CreateMaybeMessage<::proto::PopSection>(GetArenaNoVirtual());
    college_ = p;
  }
  // @@protoc_insertion_point(field_mutable:proto.Location.college)
  return college_;
}
inline void Location::set_allocated_college(::proto::PopSection* college) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete college_;
  }
  if (college) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      college = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, college, submessage_arena);
    }

  } else {

  }
  college_ = college;
  // @@protoc_insertion_point(field_set_allocated:proto.Location.college)
}

// .proto.PopSection workplace = 6;
inline bool Location::has_workplace() const {
  return this != internal_default_instance() && workplace_ != nullptr;
}
inline void Location::clear_workplace() {
  if (GetArenaNoVirtual() == nullptr && workplace_ != nullptr) {
    delete workplace_;
  }
  workplace_ = nullptr;
}
inline const ::proto::PopSection& Location::workplace() const {
  const ::proto::PopSection* p = workplace_;
  // @@protoc_insertion_point(field_get:proto.Location.workplace)
  return p != nullptr ? *p : *reinterpret_cast<const ::proto::PopSection*>(
      &::proto::_PopSection_default_instance_);
}
inline ::proto::PopSection* Location::release_workplace() {
  // @@protoc_insertion_point(field_release:proto.Location.workplace)

  ::proto::PopSection* temp = workplace_;
  workplace_ = nullptr;
  return temp;
}
inline ::proto::PopSection* Location::mutable_workplace() {

  if (workplace_ == nullptr) {
    auto* p = CreateMaybeMessage<::proto::PopSection>(GetArenaNoVirtual());
    workplace_ = p;
  }
  // @@protoc_insertion_point(field_mutable:proto.Location.workplace)
  return workplace_;
}
inline void Location::set_allocated_workplace(::proto::PopSection* workplace) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete workplace_;
  }
  if (workplace) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      workplace = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, workplace, submessage_arena);
    }

  } else {

  }
  workplace_ = workplace;
  // @@protoc_insertion_point(field_set_allocated:proto.Location.workplace)
}

// .proto.PopSection primCom = 7;
inline bool Location::has_primcom() const {
  return this != internal_default_instance() && primcom_ != nullptr;
}
inline void Location::clear_primcom() {
  if (GetArenaNoVirtual() == nullptr && primcom_ != nullptr) {
    delete primcom_;
  }
  primcom_ = nullptr;
}
inline const ::proto::PopSection& Location::primcom() const {
  const ::proto::PopSection* p = primcom_;
  // @@protoc_insertion_point(field_get:proto.Location.primCom)
  return p != nullptr ? *p : *reinterpret_cast<const ::proto::PopSection*>(
      &::proto::_PopSection_default_instance_);
}
inline ::proto::PopSection* Location::release_primcom() {
  // @@protoc_insertion_point(field_release:proto.Location.primCom)

  ::proto::PopSection* temp = primcom_;
  primcom_ = nullptr;
  return temp;
}
inline ::proto::PopSection* Location::mutable_primcom() {

  if (primcom_ == nullptr) {
    auto* p = CreateMaybeMessage<::proto::PopSection>(GetArenaNoVirtual());
    primcom_ = p;
  }
  // @@protoc_insertion_point(field_mutable:proto.Location.primCom)
  return primcom_;
}
inline void Location::set_allocated_primcom(::proto::PopSection* primcom) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete primcom_;
  }
  if (primcom) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      primcom = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, primcom, submessage_arena);
    }

  } else {

  }
  primcom_ = primcom;
  // @@protoc_insertion_point(field_set_allocated:proto.Location.primCom)
}

// .proto.PopSection secCom = 8;
inline bool Location::has_seccom() const {
  return this != internal_default_instance() && seccom_ != nullptr;
}
inline void Location::clear_seccom() {
  if (GetArenaNoVirtual() == nullptr && seccom_ != nullptr) {
    delete seccom_;
  }
  seccom_ = nullptr;
}
inline const ::proto::PopSection& Location::seccom() const {
  const ::proto::PopSection* p = seccom_;
  // @@protoc_insertion_point(field_get:proto.Location.secCom)
  return p != nullptr ? *p : *reinterpret_cast<const ::proto::PopSection*>(
      &::proto::_PopSection_default_instance_);
}
inline ::proto::PopSection* Location::release_seccom() {
  // @@protoc_insertion_point(field_release:proto.Location.secCom)

  ::proto::PopSection* temp = seccom_;
  seccom_ = nullptr;
  return temp;
}
inline ::proto::PopSection* Location::mutable_seccom() {

  if (seccom_ == nullptr) {
    auto* p = CreateMaybeMessage<::proto::PopSection>(GetArenaNoVirtual());
    seccom_ = p;
  }
  // @@protoc_insertion_point(field_mutable:proto.Location.secCom)
  return seccom_;
}
inline void Location::set_allocated_seccom(::proto::PopSection* seccom) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete seccom_;
  }
  if (seccom) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      seccom = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, seccom, submessage_arena);
    }

  } else {

  }
  seccom_ = seccom;
  // @@protoc_insertion_point(field_set_allocated:proto.Location.secCom)
}

// .proto.PopSection daycare = 9;
inline bool Location::has_daycare() const {
  return this != internal_default_instance() && daycare_ != nullptr;
}
inline void Location::clear_daycare() {
  if (GetArenaNoVirtual() == nullptr && daycare_ != nullptr) {
    delete daycare_;
  }
  daycare_ = nullptr;
}
inline const ::proto::PopSection& Location::daycare() const {
  const ::proto::PopSection* p = daycare_;
  // @@protoc_insertion_point(field_get:proto.Location.daycare)
  return p != nullptr ? *p : *reinterpret_cast<const ::proto::PopSection*>(
      &::proto::_PopSection_default_instance_);
}
inline ::proto::PopSection* Location::release_daycare() {
  // @@protoc_insertion_point(field_release:proto.Location.daycare)

  ::proto::PopSection* temp = daycare_;
  daycare_ = nullptr;
  return temp;
}
inline ::proto::PopSection* Location::mutable_daycare() {

  if (daycare_ == nullptr) {
    auto* p = CreateMaybeMessage<::proto::PopSection>(GetArenaNoVirtual());
    daycare_ = p;
  }
  // @@protoc_insertion_point(field_mutable:proto.Location.daycare)
  return daycare_;
}
inline void Location::set_allocated_daycare(::proto::PopSection* daycare) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete daycare_;
  }
  if (daycare) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      daycare = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, daycare, submessage_arena);
    }

  } else {

  }
  daycare_ = daycare;
  // @@protoc_insertion_point(field_set_allocated:proto.Location.daycare)
}

// .proto.PopSection preschool = 10;
inline bool Location::has_preschool() const {
  return this != internal_default_instance() && preschool_ != nullptr;
}
inline void Location::clear_preschool() {
  if (GetArenaNoVirtual() == nullptr && preschool_ != nullptr) {
    delete preschool_;
  }
  preschool_ = nullptr;
}
inline const ::proto::PopSection& Location::preschool() const {
  const ::proto::PopSection* p = preschool_;
  // @@protoc_insertion_point(field_get:proto.Location.preschool)
  return p != nullptr ? *p : *reinterpret_cast<const ::proto::PopSection*>(
      &::proto::_PopSection_default_instance_);
}
inline ::proto::PopSection* Location::release_preschool() {
  // @@protoc_insertion_point(field_release:proto.Location.preschool)

  ::proto::PopSection* temp = preschool_;
  preschool_ = nullptr;
  return temp;
}
inline ::proto::PopSection* Location::mutable_preschool() {

  if (preschool_ == nullptr) {
    auto* p = CreateMaybeMessage<::proto::PopSection>(GetArenaNoVirtual());
    preschool_ = p;
  }
  // @@protoc_insertion_point(field_mutable:proto.Location.preschool)
  return preschool_;
}
inline void Location::set_allocated_preschool(::proto::PopSection* preschool) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete preschool_;
  }
  if (preschool) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      preschool = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, preschool, submessage_arena);
    }

  } else {

  }
  preschool_ = preschool;
  // @@protoc_insertion_point(field_set_allocated:proto.Location.preschool)
}

// -------------------------------------------------------------------

// Coordinate

// double longitude = 1;
inline void Coordinate::clear_longitude() {
  longitude_ = 0;
}
inline double Coordinate::longitude() const {
  // @@protoc_insertion_point(field_get:proto.Coordinate.longitude)
  return longitude_;
}
inline void Coordinate::set_longitude(double value) {

  longitude_ = value;
  // @@protoc_insertion_point(field_set:proto.Coordinate.longitude)
}

// double latitude = 2;
inline void Coordinate::clear_latitude() {
  latitude_ = 0;
}
inline double Coordinate::latitude() const {
  // @@protoc_insertion_point(field_get:proto.Coordinate.latitude)
  return latitude_;
}
inline void Coordinate::set_latitude(double value) {

  latitude_ = value;
  // @@protoc_insertion_point(field_set:proto.Coordinate.latitude)
}

// -------------------------------------------------------------------

// PopSection

// uint32 population = 1;
inline void PopSection::clear_population() {
  population_ = 0u;
}
inline ::google::protobuf::uint32 PopSection::population() const {
  // @@protoc_insertion_point(field_get:proto.PopSection.population)
  return population_;
}
inline void PopSection::set_population(::google::protobuf::uint32 value) {

  population_ = value;
  // @@protoc_insertion_point(field_set:proto.PopSection.population)
}

// double immune = 2;
inline void PopSection::clear_immune() {
  immune_ = 0;
}
inline double PopSection::immune() const {
  // @@protoc_insertion_point(field_get:proto.PopSection.immune)
  return immune_;
}
inline void PopSection::set_immune(double value) {

  immune_ = value;
  // @@protoc_insertion_point(field_set:proto.PopSection.immune)
}

// double infected = 3;
inline void PopSection::clear_infected() {
  infected_ = 0;
}
inline double PopSection::infected() const {
  // @@protoc_insertion_point(field_get:proto.PopSection.infected)
  return infected_;
}
inline void PopSection::set_infected(double value) {

  infected_ = value;
  // @@protoc_insertion_point(field_set:proto.PopSection.infected)
}

// double infectious = 4;
inline void PopSection::clear_infectious() {
  infectious_ = 0;
}
inline double PopSection::infectious() const {
  // @@protoc_insertion_point(field_get:proto.PopSection.infectious)
  return infectious_;
}
inline void PopSection::set_infectious(double value) {

  infectious_ = value;
  // @@protoc_insertion_point(field_set:proto.PopSection.infectious)
}

// double recovered = 5;
inline void PopSection::clear_recovered() {
  recovered_ = 0;
}
inline double PopSection::recovered() const {
  // @@protoc_insertion_point(field_get:proto.PopSection.recovered)
  return recovered_;
}
inline void PopSection::set_recovered(double value) {

  recovered_ = value;
  // @@protoc_insertion_point(field_set:proto.PopSection.recovered)
}

// double susceptible = 6;
inline void PopSection::clear_susceptible() {
  susceptible_ = 0;
}
inline double PopSection::susceptible() const {
  // @@protoc_insertion_point(field_get:proto.PopSection.susceptible)
  return susceptible_;
}
inline void PopSection::set_susceptible(double value) {

  susceptible_ = value;
  // @@protoc_insertion_point(field_set:proto.PopSection.susceptible)
}

// double symptomatic = 7;
inline void PopSection::clear_symptomatic() {
  symptomatic_ = 0;
}
inline double PopSection::symptomatic() const {
  // @@protoc_insertion_point(field_get:proto.PopSection.symptomatic)
  return symptomatic_;
}
inline void PopSection::set_symptomatic(double value) {

  symptomatic_ = value;
  // @@protoc_insertion_point(field_set:proto.PopSection.symptomatic)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace proto

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // PROTOBUF_INCLUDED_ProtobufEpiFormat_2eproto
