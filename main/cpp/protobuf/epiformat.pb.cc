// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: epiformat.proto

#include "epiformat.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

extern PROTOBUF_INTERNAL_EXPORT_ProtobufEpiFormat_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Coordinate_ProtobufEpiFormat_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_ProtobufEpiFormat_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_PopSection_ProtobufEpiFormat_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_ProtobufEpiFormat_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_Timestep_ProtobufEpiFormat_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_ProtobufEpiFormat_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_Location_ProtobufEpiFormat_2eproto;
namespace proto {
class EpiFileDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<EpiFile> _instance;
} _EpiFile_default_instance_;
class TimestepDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Timestep> _instance;
} _Timestep_default_instance_;
class LocationDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Location> _instance;
} _Location_default_instance_;
class CoordinateDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Coordinate> _instance;
} _Coordinate_default_instance_;
class PopSectionDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PopSection> _instance;
} _PopSection_default_instance_;
}  // namespace proto
static void InitDefaultsEpiFile_ProtobufEpiFormat_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::_EpiFile_default_instance_;
    new (ptr) ::proto::EpiFile();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::EpiFile::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_EpiFile_ProtobufEpiFormat_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsEpiFile_ProtobufEpiFormat_2eproto}, {
      &scc_info_Timestep_ProtobufEpiFormat_2eproto.base,}};

static void InitDefaultsTimestep_ProtobufEpiFormat_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::_Timestep_default_instance_;
    new (ptr) ::proto::Timestep();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::Timestep::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_Timestep_ProtobufEpiFormat_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsTimestep_ProtobufEpiFormat_2eproto}, {
      &scc_info_Location_ProtobufEpiFormat_2eproto.base,}};

static void InitDefaultsLocation_ProtobufEpiFormat_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::_Location_default_instance_;
    new (ptr) ::proto::Location();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::Location::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_Location_ProtobufEpiFormat_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsLocation_ProtobufEpiFormat_2eproto}, {
      &scc_info_Coordinate_ProtobufEpiFormat_2eproto.base,
      &scc_info_PopSection_ProtobufEpiFormat_2eproto.base,}};

static void InitDefaultsCoordinate_ProtobufEpiFormat_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::_Coordinate_default_instance_;
    new (ptr) ::proto::Coordinate();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::Coordinate::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Coordinate_ProtobufEpiFormat_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCoordinate_ProtobufEpiFormat_2eproto}, {}};

static void InitDefaultsPopSection_ProtobufEpiFormat_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::_PopSection_default_instance_;
    new (ptr) ::proto::PopSection();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::PopSection::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_PopSection_ProtobufEpiFormat_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsPopSection_ProtobufEpiFormat_2eproto}, {}};

void InitDefaults_ProtobufEpiFormat_2eproto() {
  ::google::protobuf::internal::InitSCC(&scc_info_EpiFile_ProtobufEpiFormat_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Timestep_ProtobufEpiFormat_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Location_ProtobufEpiFormat_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Coordinate_ProtobufEpiFormat_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_PopSection_ProtobufEpiFormat_2eproto.base);
}

::google::protobuf::Metadata file_level_metadata_ProtobufEpiFormat_2eproto[5];
constexpr ::google::protobuf::EnumDescriptor const** file_level_enum_descriptors_ProtobufEpiFormat_2eproto = nullptr;
constexpr ::google::protobuf::ServiceDescriptor const** file_level_service_descriptors_ProtobufEpiFormat_2eproto = nullptr;

const ::google::protobuf::uint32 TableStruct_ProtobufEpiFormat_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::proto::EpiFile, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::EpiFile, timesteps_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::proto::Timestep, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::Timestep, locations_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::proto::Location, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::Location, name_),
  PROTOBUF_FIELD_OFFSET(::proto::Location, coord_),
  PROTOBUF_FIELD_OFFSET(::proto::Location, household_),
  PROTOBUF_FIELD_OFFSET(::proto::Location, k12school_),
  PROTOBUF_FIELD_OFFSET(::proto::Location, college_),
  PROTOBUF_FIELD_OFFSET(::proto::Location, workplace_),
  PROTOBUF_FIELD_OFFSET(::proto::Location, primcom_),
  PROTOBUF_FIELD_OFFSET(::proto::Location, seccom_),
  PROTOBUF_FIELD_OFFSET(::proto::Location, daycare_),
  PROTOBUF_FIELD_OFFSET(::proto::Location, preschool_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::proto::Coordinate, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::Coordinate, longitude_),
  PROTOBUF_FIELD_OFFSET(::proto::Coordinate, latitude_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::proto::PopSection, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::PopSection, population_),
  PROTOBUF_FIELD_OFFSET(::proto::PopSection, immune_),
  PROTOBUF_FIELD_OFFSET(::proto::PopSection, infected_),
  PROTOBUF_FIELD_OFFSET(::proto::PopSection, infectious_),
  PROTOBUF_FIELD_OFFSET(::proto::PopSection, recovered_),
  PROTOBUF_FIELD_OFFSET(::proto::PopSection, susceptible_),
  PROTOBUF_FIELD_OFFSET(::proto::PopSection, symptomatic_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::proto::EpiFile)},
  { 6, -1, sizeof(::proto::Timestep)},
  { 12, -1, sizeof(::proto::Location)},
  { 27, -1, sizeof(::proto::Coordinate)},
  { 34, -1, sizeof(::proto::PopSection)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::_EpiFile_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::_Timestep_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::_Location_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::_Coordinate_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::_PopSection_default_instance_),
};

::google::protobuf::internal::AssignDescriptorsTable assign_descriptors_table_ProtobufEpiFormat_2eproto = {
  {}, AddDescriptors_ProtobufEpiFormat_2eproto, "epiformat.proto", schemas,
  file_default_instances, TableStruct_ProtobufEpiFormat_2eproto::offsets,
  file_level_metadata_ProtobufEpiFormat_2eproto, 5, file_level_enum_descriptors_ProtobufEpiFormat_2eproto, file_level_service_descriptors_ProtobufEpiFormat_2eproto,
};

const char descriptor_table_protodef_ProtobufEpiFormat_2eproto[] =
  "\n\027ProtobufEpiFormat.proto\022\005proto\"-\n\007EpiF"
  "ile\022\"\n\ttimesteps\030\001 \003(\0132\017.proto.Timestep\""
  ".\n\010Timestep\022\"\n\tlocations\030\001 \003(\0132\017.proto.L"
  "ocation\"\341\002\n\010Location\022\014\n\004name\030\001 \001(\t\022 \n\005co"
  "ord\030\002 \001(\0132\021.proto.Coordinate\022$\n\thousehol"
  "d\030\003 \001(\0132\021.proto.PopSection\022$\n\tk12school\030"
  "\004 \001(\0132\021.proto.PopSection\022\"\n\007college\030\005 \001("
  "\0132\021.proto.PopSection\022$\n\tworkplace\030\006 \001(\0132"
  "\021.proto.PopSection\022\"\n\007primCom\030\007 \001(\0132\021.pr"
  "oto.PopSection\022!\n\006secCom\030\010 \001(\0132\021.proto.P"
  "opSection\022\"\n\007daycare\030\t \001(\0132\021.proto.PopSe"
  "ction\022$\n\tpreschool\030\n \001(\0132\021.proto.PopSect"
  "ion\"1\n\nCoordinate\022\021\n\tlongitude\030\001 \001(\001\022\020\n\010"
  "latitude\030\002 \001(\001\"\223\001\n\nPopSection\022\022\n\npopulat"
  "ion\030\001 \001(\r\022\016\n\006immune\030\002 \001(\001\022\020\n\010infected\030\003 "
  "\001(\001\022\022\n\ninfectious\030\004 \001(\001\022\021\n\trecovered\030\005 \001"
  "(\001\022\023\n\013susceptible\030\006 \001(\001\022\023\n\013symptomatic\030\007"
  " \001(\001b\006proto3"
  ;
::google::protobuf::internal::DescriptorTable descriptor_table_ProtobufEpiFormat_2eproto = {
  false, InitDefaults_ProtobufEpiFormat_2eproto, 
  descriptor_table_protodef_ProtobufEpiFormat_2eproto,
  "epiformat.proto", &assign_descriptors_table_ProtobufEpiFormat_2eproto, 692,
};

void AddDescriptors_ProtobufEpiFormat_2eproto() {
  static constexpr ::google::protobuf::internal::InitFunc deps[1] =
  {
  };
 ::google::protobuf::internal::AddDescriptors(&descriptor_table_ProtobufEpiFormat_2eproto, deps, 0);
}

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_ProtobufEpiFormat_2eproto = []() { AddDescriptors_ProtobufEpiFormat_2eproto(); return true; }();
namespace proto {

// ===================================================================

void EpiFile::InitAsDefaultInstance() {
}
class EpiFile::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EpiFile::kTimestepsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EpiFile::EpiFile()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.EpiFile)
}
EpiFile::EpiFile(const EpiFile& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      timesteps_(from.timesteps_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:proto.EpiFile)
}

void EpiFile::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_EpiFile_ProtobufEpiFormat_2eproto.base);
}

EpiFile::~EpiFile() {
  // @@protoc_insertion_point(destructor:proto.EpiFile)
  SharedDtor();
}

void EpiFile::SharedDtor() {
}

void EpiFile::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const EpiFile& EpiFile::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_EpiFile_ProtobufEpiFormat_2eproto.base);
  return *internal_default_instance();
}


void EpiFile::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.EpiFile)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  timesteps_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* EpiFile::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<EpiFile*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // repeated .proto.Timestep timesteps = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::proto::Timestep::_InternalParse;
          object = msg->add_timesteps();
          if (size > end - ptr) goto len_delim_till_end;
          ptr += size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
              {parser_till_end, object}, ptr - size, ptr));
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 10 && (ptr += 1));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool EpiFile::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.EpiFile)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto.Timestep timesteps = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_timesteps()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.EpiFile)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.EpiFile)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void EpiFile::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.EpiFile)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .proto.Timestep timesteps = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->timesteps_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->timesteps(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.EpiFile)
}

::google::protobuf::uint8* EpiFile::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.EpiFile)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .proto.Timestep timesteps = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->timesteps_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->timesteps(static_cast<int>(i)), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.EpiFile)
  return target;
}

size_t EpiFile::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.EpiFile)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .proto.Timestep timesteps = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->timesteps_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->timesteps(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void EpiFile::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.EpiFile)
  GOOGLE_DCHECK_NE(&from, this);
  const EpiFile* source =
      ::google::protobuf::DynamicCastToGenerated<EpiFile>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.EpiFile)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.EpiFile)
    MergeFrom(*source);
  }
}

void EpiFile::MergeFrom(const EpiFile& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.EpiFile)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  timesteps_.MergeFrom(from.timesteps_);
}

void EpiFile::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.EpiFile)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EpiFile::CopyFrom(const EpiFile& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.EpiFile)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EpiFile::IsInitialized() const {
  return true;
}

void EpiFile::Swap(EpiFile* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EpiFile::InternalSwap(EpiFile* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  CastToBase(&timesteps_)->InternalSwap(CastToBase(&other->timesteps_));
}

::google::protobuf::Metadata EpiFile::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_ProtobufEpiFormat_2eproto);
  return ::file_level_metadata_ProtobufEpiFormat_2eproto[kIndexInFileMessages];
}


// ===================================================================

void Timestep::InitAsDefaultInstance() {
}
class Timestep::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Timestep::kLocationsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Timestep::Timestep()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.Timestep)
}
Timestep::Timestep(const Timestep& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      locations_(from.locations_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:proto.Timestep)
}

void Timestep::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_Timestep_ProtobufEpiFormat_2eproto.base);
}

Timestep::~Timestep() {
  // @@protoc_insertion_point(destructor:proto.Timestep)
  SharedDtor();
}

void Timestep::SharedDtor() {
}

void Timestep::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Timestep& Timestep::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Timestep_ProtobufEpiFormat_2eproto.base);
  return *internal_default_instance();
}


void Timestep::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.Timestep)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  locations_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Timestep::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<Timestep*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // repeated .proto.Location locations = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::proto::Location::_InternalParse;
          object = msg->add_locations();
          if (size > end - ptr) goto len_delim_till_end;
          ptr += size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
              {parser_till_end, object}, ptr - size, ptr));
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 10 && (ptr += 1));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Timestep::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.Timestep)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto.Location locations = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_locations()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.Timestep)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.Timestep)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Timestep::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.Timestep)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .proto.Location locations = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->locations_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->locations(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.Timestep)
}

::google::protobuf::uint8* Timestep::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.Timestep)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .proto.Location locations = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->locations_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->locations(static_cast<int>(i)), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.Timestep)
  return target;
}

size_t Timestep::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.Timestep)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .proto.Location locations = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->locations_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->locations(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Timestep::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.Timestep)
  GOOGLE_DCHECK_NE(&from, this);
  const Timestep* source =
      ::google::protobuf::DynamicCastToGenerated<Timestep>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.Timestep)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.Timestep)
    MergeFrom(*source);
  }
}

void Timestep::MergeFrom(const Timestep& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.Timestep)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  locations_.MergeFrom(from.locations_);
}

void Timestep::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.Timestep)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Timestep::CopyFrom(const Timestep& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.Timestep)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Timestep::IsInitialized() const {
  return true;
}

void Timestep::Swap(Timestep* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Timestep::InternalSwap(Timestep* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  CastToBase(&locations_)->InternalSwap(CastToBase(&other->locations_));
}

::google::protobuf::Metadata Timestep::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_ProtobufEpiFormat_2eproto);
  return ::file_level_metadata_ProtobufEpiFormat_2eproto[kIndexInFileMessages];
}


// ===================================================================

void Location::InitAsDefaultInstance() {
  ::proto::_Location_default_instance_._instance.get_mutable()->coord_ = const_cast< ::proto::Coordinate*>(
      ::proto::Coordinate::internal_default_instance());
  ::proto::_Location_default_instance_._instance.get_mutable()->household_ = const_cast< ::proto::PopSection*>(
      ::proto::PopSection::internal_default_instance());
  ::proto::_Location_default_instance_._instance.get_mutable()->k12school_ = const_cast< ::proto::PopSection*>(
      ::proto::PopSection::internal_default_instance());
  ::proto::_Location_default_instance_._instance.get_mutable()->college_ = const_cast< ::proto::PopSection*>(
      ::proto::PopSection::internal_default_instance());
  ::proto::_Location_default_instance_._instance.get_mutable()->workplace_ = const_cast< ::proto::PopSection*>(
      ::proto::PopSection::internal_default_instance());
  ::proto::_Location_default_instance_._instance.get_mutable()->primcom_ = const_cast< ::proto::PopSection*>(
      ::proto::PopSection::internal_default_instance());
  ::proto::_Location_default_instance_._instance.get_mutable()->seccom_ = const_cast< ::proto::PopSection*>(
      ::proto::PopSection::internal_default_instance());
  ::proto::_Location_default_instance_._instance.get_mutable()->daycare_ = const_cast< ::proto::PopSection*>(
      ::proto::PopSection::internal_default_instance());
  ::proto::_Location_default_instance_._instance.get_mutable()->preschool_ = const_cast< ::proto::PopSection*>(
      ::proto::PopSection::internal_default_instance());
}
class Location::HasBitSetters {
 public:
  static const ::proto::Coordinate& coord(const Location* msg);
  static const ::proto::PopSection& household(const Location* msg);
  static const ::proto::PopSection& k12school(const Location* msg);
  static const ::proto::PopSection& college(const Location* msg);
  static const ::proto::PopSection& workplace(const Location* msg);
  static const ::proto::PopSection& primcom(const Location* msg);
  static const ::proto::PopSection& seccom(const Location* msg);
  static const ::proto::PopSection& daycare(const Location* msg);
  static const ::proto::PopSection& preschool(const Location* msg);
};

const ::proto::Coordinate&
Location::HasBitSetters::coord(const Location* msg) {
  return *msg->coord_;
}
const ::proto::PopSection&
Location::HasBitSetters::household(const Location* msg) {
  return *msg->household_;
}
const ::proto::PopSection&
Location::HasBitSetters::k12school(const Location* msg) {
  return *msg->k12school_;
}
const ::proto::PopSection&
Location::HasBitSetters::college(const Location* msg) {
  return *msg->college_;
}
const ::proto::PopSection&
Location::HasBitSetters::workplace(const Location* msg) {
  return *msg->workplace_;
}
const ::proto::PopSection&
Location::HasBitSetters::primcom(const Location* msg) {
  return *msg->primcom_;
}
const ::proto::PopSection&
Location::HasBitSetters::seccom(const Location* msg) {
  return *msg->seccom_;
}
const ::proto::PopSection&
Location::HasBitSetters::daycare(const Location* msg) {
  return *msg->daycare_;
}
const ::proto::PopSection&
Location::HasBitSetters::preschool(const Location* msg) {
  return *msg->preschool_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Location::kNameFieldNumber;
const int Location::kCoordFieldNumber;
const int Location::kHouseholdFieldNumber;
const int Location::kK12SchoolFieldNumber;
const int Location::kCollegeFieldNumber;
const int Location::kWorkplaceFieldNumber;
const int Location::kPrimComFieldNumber;
const int Location::kSecComFieldNumber;
const int Location::kDaycareFieldNumber;
const int Location::kPreschoolFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Location::Location()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.Location)
}
Location::Location(const Location& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.has_coord()) {
    coord_ = new ::proto::Coordinate(*from.coord_);
  } else {
    coord_ = nullptr;
  }
  if (from.has_household()) {
    household_ = new ::proto::PopSection(*from.household_);
  } else {
    household_ = nullptr;
  }
  if (from.has_k12school()) {
    k12school_ = new ::proto::PopSection(*from.k12school_);
  } else {
    k12school_ = nullptr;
  }
  if (from.has_college()) {
    college_ = new ::proto::PopSection(*from.college_);
  } else {
    college_ = nullptr;
  }
  if (from.has_workplace()) {
    workplace_ = new ::proto::PopSection(*from.workplace_);
  } else {
    workplace_ = nullptr;
  }
  if (from.has_primcom()) {
    primcom_ = new ::proto::PopSection(*from.primcom_);
  } else {
    primcom_ = nullptr;
  }
  if (from.has_seccom()) {
    seccom_ = new ::proto::PopSection(*from.seccom_);
  } else {
    seccom_ = nullptr;
  }
  if (from.has_daycare()) {
    daycare_ = new ::proto::PopSection(*from.daycare_);
  } else {
    daycare_ = nullptr;
  }
  if (from.has_preschool()) {
    preschool_ = new ::proto::PopSection(*from.preschool_);
  } else {
    preschool_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:proto.Location)
}

void Location::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_Location_ProtobufEpiFormat_2eproto.base);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&coord_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&preschool_) -
      reinterpret_cast<char*>(&coord_)) + sizeof(preschool_));
}

Location::~Location() {
  // @@protoc_insertion_point(destructor:proto.Location)
  SharedDtor();
}

void Location::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete coord_;
  if (this != internal_default_instance()) delete household_;
  if (this != internal_default_instance()) delete k12school_;
  if (this != internal_default_instance()) delete college_;
  if (this != internal_default_instance()) delete workplace_;
  if (this != internal_default_instance()) delete primcom_;
  if (this != internal_default_instance()) delete seccom_;
  if (this != internal_default_instance()) delete daycare_;
  if (this != internal_default_instance()) delete preschool_;
}

void Location::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Location& Location::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Location_ProtobufEpiFormat_2eproto.base);
  return *internal_default_instance();
}


void Location::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.Location)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == nullptr && coord_ != nullptr) {
    delete coord_;
  }
  coord_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && household_ != nullptr) {
    delete household_;
  }
  household_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && k12school_ != nullptr) {
    delete k12school_;
  }
  k12school_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && college_ != nullptr) {
    delete college_;
  }
  college_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && workplace_ != nullptr) {
    delete workplace_;
  }
  workplace_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && primcom_ != nullptr) {
    delete primcom_;
  }
  primcom_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && seccom_ != nullptr) {
    delete seccom_;
  }
  seccom_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && daycare_ != nullptr) {
    delete daycare_;
  }
  daycare_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && preschool_ != nullptr) {
    delete preschool_;
  }
  preschool_ = nullptr;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Location::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<Location*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string name = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("proto.Location.name");
        object = msg->mutable_name();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // .proto.Coordinate coord = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::proto::Coordinate::_InternalParse;
        object = msg->mutable_coord();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .proto.PopSection household = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::proto::PopSection::_InternalParse;
        object = msg->mutable_household();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .proto.PopSection k12school = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::proto::PopSection::_InternalParse;
        object = msg->mutable_k12school();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .proto.PopSection college = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 42) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::proto::PopSection::_InternalParse;
        object = msg->mutable_college();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .proto.PopSection workplace = 6;
      case 6: {
        if (static_cast<::google::protobuf::uint8>(tag) != 50) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::proto::PopSection::_InternalParse;
        object = msg->mutable_workplace();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .proto.PopSection primCom = 7;
      case 7: {
        if (static_cast<::google::protobuf::uint8>(tag) != 58) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::proto::PopSection::_InternalParse;
        object = msg->mutable_primcom();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .proto.PopSection secCom = 8;
      case 8: {
        if (static_cast<::google::protobuf::uint8>(tag) != 66) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::proto::PopSection::_InternalParse;
        object = msg->mutable_seccom();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .proto.PopSection daycare = 9;
      case 9: {
        if (static_cast<::google::protobuf::uint8>(tag) != 74) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::proto::PopSection::_InternalParse;
        object = msg->mutable_daycare();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .proto.PopSection preschool = 10;
      case 10: {
        if (static_cast<::google::protobuf::uint8>(tag) != 82) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::proto::PopSection::_InternalParse;
        object = msg->mutable_preschool();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Location::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.Location)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto.Location.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.Coordinate coord = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_coord()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.PopSection household = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_household()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.PopSection k12school = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_k12school()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.PopSection college = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (42 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_college()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.PopSection workplace = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (50 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_workplace()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.PopSection primCom = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (58 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_primcom()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.PopSection secCom = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (66 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_seccom()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.PopSection daycare = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (74 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_daycare()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.PopSection preschool = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (82 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_preschool()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.Location)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.Location)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Location::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.Location)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.Location.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // .proto.Coordinate coord = 2;
  if (this->has_coord()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, HasBitSetters::coord(this), output);
  }

  // .proto.PopSection household = 3;
  if (this->has_household()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, HasBitSetters::household(this), output);
  }

  // .proto.PopSection k12school = 4;
  if (this->has_k12school()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, HasBitSetters::k12school(this), output);
  }

  // .proto.PopSection college = 5;
  if (this->has_college()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, HasBitSetters::college(this), output);
  }

  // .proto.PopSection workplace = 6;
  if (this->has_workplace()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, HasBitSetters::workplace(this), output);
  }

  // .proto.PopSection primCom = 7;
  if (this->has_primcom()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, HasBitSetters::primcom(this), output);
  }

  // .proto.PopSection secCom = 8;
  if (this->has_seccom()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, HasBitSetters::seccom(this), output);
  }

  // .proto.PopSection daycare = 9;
  if (this->has_daycare()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, HasBitSetters::daycare(this), output);
  }

  // .proto.PopSection preschool = 10;
  if (this->has_preschool()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, HasBitSetters::preschool(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.Location)
}

::google::protobuf::uint8* Location::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.Location)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.Location.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // .proto.Coordinate coord = 2;
  if (this->has_coord()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, HasBitSetters::coord(this), target);
  }

  // .proto.PopSection household = 3;
  if (this->has_household()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, HasBitSetters::household(this), target);
  }

  // .proto.PopSection k12school = 4;
  if (this->has_k12school()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, HasBitSetters::k12school(this), target);
  }

  // .proto.PopSection college = 5;
  if (this->has_college()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, HasBitSetters::college(this), target);
  }

  // .proto.PopSection workplace = 6;
  if (this->has_workplace()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, HasBitSetters::workplace(this), target);
  }

  // .proto.PopSection primCom = 7;
  if (this->has_primcom()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        7, HasBitSetters::primcom(this), target);
  }

  // .proto.PopSection secCom = 8;
  if (this->has_seccom()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        8, HasBitSetters::seccom(this), target);
  }

  // .proto.PopSection daycare = 9;
  if (this->has_daycare()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        9, HasBitSetters::daycare(this), target);
  }

  // .proto.PopSection preschool = 10;
  if (this->has_preschool()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        10, HasBitSetters::preschool(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.Location)
  return target;
}

size_t Location::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.Location)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // .proto.Coordinate coord = 2;
  if (this->has_coord()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *coord_);
  }

  // .proto.PopSection household = 3;
  if (this->has_household()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *household_);
  }

  // .proto.PopSection k12school = 4;
  if (this->has_k12school()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *k12school_);
  }

  // .proto.PopSection college = 5;
  if (this->has_college()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *college_);
  }

  // .proto.PopSection workplace = 6;
  if (this->has_workplace()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *workplace_);
  }

  // .proto.PopSection primCom = 7;
  if (this->has_primcom()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *primcom_);
  }

  // .proto.PopSection secCom = 8;
  if (this->has_seccom()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *seccom_);
  }

  // .proto.PopSection daycare = 9;
  if (this->has_daycare()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *daycare_);
  }

  // .proto.PopSection preschool = 10;
  if (this->has_preschool()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *preschool_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Location::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.Location)
  GOOGLE_DCHECK_NE(&from, this);
  const Location* source =
      ::google::protobuf::DynamicCastToGenerated<Location>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.Location)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.Location)
    MergeFrom(*source);
  }
}

void Location::MergeFrom(const Location& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.Location)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.has_coord()) {
    mutable_coord()->::proto::Coordinate::MergeFrom(from.coord());
  }
  if (from.has_household()) {
    mutable_household()->::proto::PopSection::MergeFrom(from.household());
  }
  if (from.has_k12school()) {
    mutable_k12school()->::proto::PopSection::MergeFrom(from.k12school());
  }
  if (from.has_college()) {
    mutable_college()->::proto::PopSection::MergeFrom(from.college());
  }
  if (from.has_workplace()) {
    mutable_workplace()->::proto::PopSection::MergeFrom(from.workplace());
  }
  if (from.has_primcom()) {
    mutable_primcom()->::proto::PopSection::MergeFrom(from.primcom());
  }
  if (from.has_seccom()) {
    mutable_seccom()->::proto::PopSection::MergeFrom(from.seccom());
  }
  if (from.has_daycare()) {
    mutable_daycare()->::proto::PopSection::MergeFrom(from.daycare());
  }
  if (from.has_preschool()) {
    mutable_preschool()->::proto::PopSection::MergeFrom(from.preschool());
  }
}

void Location::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.Location)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Location::CopyFrom(const Location& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.Location)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Location::IsInitialized() const {
  return true;
}

void Location::Swap(Location* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Location::InternalSwap(Location* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(coord_, other->coord_);
  swap(household_, other->household_);
  swap(k12school_, other->k12school_);
  swap(college_, other->college_);
  swap(workplace_, other->workplace_);
  swap(primcom_, other->primcom_);
  swap(seccom_, other->seccom_);
  swap(daycare_, other->daycare_);
  swap(preschool_, other->preschool_);
}

::google::protobuf::Metadata Location::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_ProtobufEpiFormat_2eproto);
  return ::file_level_metadata_ProtobufEpiFormat_2eproto[kIndexInFileMessages];
}


// ===================================================================

void Coordinate::InitAsDefaultInstance() {
}
class Coordinate::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Coordinate::kLongitudeFieldNumber;
const int Coordinate::kLatitudeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Coordinate::Coordinate()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.Coordinate)
}
Coordinate::Coordinate(const Coordinate& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&longitude_, &from.longitude_,
    static_cast<size_t>(reinterpret_cast<char*>(&latitude_) -
    reinterpret_cast<char*>(&longitude_)) + sizeof(latitude_));
  // @@protoc_insertion_point(copy_constructor:proto.Coordinate)
}

void Coordinate::SharedCtor() {
  ::memset(&longitude_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&latitude_) -
      reinterpret_cast<char*>(&longitude_)) + sizeof(latitude_));
}

Coordinate::~Coordinate() {
  // @@protoc_insertion_point(destructor:proto.Coordinate)
  SharedDtor();
}

void Coordinate::SharedDtor() {
}

void Coordinate::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Coordinate& Coordinate::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Coordinate_ProtobufEpiFormat_2eproto.base);
  return *internal_default_instance();
}


void Coordinate::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.Coordinate)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&longitude_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&latitude_) -
      reinterpret_cast<char*>(&longitude_)) + sizeof(latitude_));
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Coordinate::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<Coordinate*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // double longitude = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 9) goto handle_unusual;
        msg->set_longitude(::google::protobuf::io::UnalignedLoad<double>(ptr));
        ptr += sizeof(double);
        break;
      }
      // double latitude = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 17) goto handle_unusual;
        msg->set_latitude(::google::protobuf::io::UnalignedLoad<double>(ptr));
        ptr += sizeof(double);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Coordinate::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.Coordinate)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // double longitude = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (9 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &longitude_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double latitude = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (17 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &latitude_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.Coordinate)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.Coordinate)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Coordinate::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.Coordinate)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double longitude = 1;
  if (this->longitude() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->longitude(), output);
  }

  // double latitude = 2;
  if (this->latitude() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->latitude(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.Coordinate)
}

::google::protobuf::uint8* Coordinate::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.Coordinate)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double longitude = 1;
  if (this->longitude() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(1, this->longitude(), target);
  }

  // double latitude = 2;
  if (this->latitude() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->latitude(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.Coordinate)
  return target;
}

size_t Coordinate::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.Coordinate)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // double longitude = 1;
  if (this->longitude() != 0) {
    total_size += 1 + 8;
  }

  // double latitude = 2;
  if (this->latitude() != 0) {
    total_size += 1 + 8;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Coordinate::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.Coordinate)
  GOOGLE_DCHECK_NE(&from, this);
  const Coordinate* source =
      ::google::protobuf::DynamicCastToGenerated<Coordinate>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.Coordinate)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.Coordinate)
    MergeFrom(*source);
  }
}

void Coordinate::MergeFrom(const Coordinate& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.Coordinate)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.longitude() != 0) {
    set_longitude(from.longitude());
  }
  if (from.latitude() != 0) {
    set_latitude(from.latitude());
  }
}

void Coordinate::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.Coordinate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Coordinate::CopyFrom(const Coordinate& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.Coordinate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Coordinate::IsInitialized() const {
  return true;
}

void Coordinate::Swap(Coordinate* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Coordinate::InternalSwap(Coordinate* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(longitude_, other->longitude_);
  swap(latitude_, other->latitude_);
}

::google::protobuf::Metadata Coordinate::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_ProtobufEpiFormat_2eproto);
  return ::file_level_metadata_ProtobufEpiFormat_2eproto[kIndexInFileMessages];
}


// ===================================================================

void PopSection::InitAsDefaultInstance() {
}
class PopSection::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PopSection::kPopulationFieldNumber;
const int PopSection::kImmuneFieldNumber;
const int PopSection::kInfectedFieldNumber;
const int PopSection::kInfectiousFieldNumber;
const int PopSection::kRecoveredFieldNumber;
const int PopSection::kSusceptibleFieldNumber;
const int PopSection::kSymptomaticFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PopSection::PopSection()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.PopSection)
}
PopSection::PopSection(const PopSection& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&immune_, &from.immune_,
    static_cast<size_t>(reinterpret_cast<char*>(&population_) -
    reinterpret_cast<char*>(&immune_)) + sizeof(population_));
  // @@protoc_insertion_point(copy_constructor:proto.PopSection)
}

void PopSection::SharedCtor() {
  ::memset(&immune_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&population_) -
      reinterpret_cast<char*>(&immune_)) + sizeof(population_));
}

PopSection::~PopSection() {
  // @@protoc_insertion_point(destructor:proto.PopSection)
  SharedDtor();
}

void PopSection::SharedDtor() {
}

void PopSection::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const PopSection& PopSection::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_PopSection_ProtobufEpiFormat_2eproto.base);
  return *internal_default_instance();
}


void PopSection::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.PopSection)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&immune_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&population_) -
      reinterpret_cast<char*>(&immune_)) + sizeof(population_));
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* PopSection::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<PopSection*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // uint32 population = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_population(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // double immune = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 17) goto handle_unusual;
        msg->set_immune(::google::protobuf::io::UnalignedLoad<double>(ptr));
        ptr += sizeof(double);
        break;
      }
      // double infected = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 25) goto handle_unusual;
        msg->set_infected(::google::protobuf::io::UnalignedLoad<double>(ptr));
        ptr += sizeof(double);
        break;
      }
      // double infectious = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 33) goto handle_unusual;
        msg->set_infectious(::google::protobuf::io::UnalignedLoad<double>(ptr));
        ptr += sizeof(double);
        break;
      }
      // double recovered = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 41) goto handle_unusual;
        msg->set_recovered(::google::protobuf::io::UnalignedLoad<double>(ptr));
        ptr += sizeof(double);
        break;
      }
      // double susceptible = 6;
      case 6: {
        if (static_cast<::google::protobuf::uint8>(tag) != 49) goto handle_unusual;
        msg->set_susceptible(::google::protobuf::io::UnalignedLoad<double>(ptr));
        ptr += sizeof(double);
        break;
      }
      // double symptomatic = 7;
      case 7: {
        if (static_cast<::google::protobuf::uint8>(tag) != 57) goto handle_unusual;
        msg->set_symptomatic(::google::protobuf::io::UnalignedLoad<double>(ptr));
        ptr += sizeof(double);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool PopSection::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.PopSection)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 population = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &population_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double immune = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (17 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &immune_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double infected = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (25 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &infected_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double infectious = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (33 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &infectious_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double recovered = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (41 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &recovered_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double susceptible = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (49 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &susceptible_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double symptomatic = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (57 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &symptomatic_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.PopSection)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.PopSection)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void PopSection::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.PopSection)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 population = 1;
  if (this->population() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->population(), output);
  }

  // double immune = 2;
  if (this->immune() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->immune(), output);
  }

  // double infected = 3;
  if (this->infected() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(3, this->infected(), output);
  }

  // double infectious = 4;
  if (this->infectious() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(4, this->infectious(), output);
  }

  // double recovered = 5;
  if (this->recovered() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(5, this->recovered(), output);
  }

  // double susceptible = 6;
  if (this->susceptible() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(6, this->susceptible(), output);
  }

  // double symptomatic = 7;
  if (this->symptomatic() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(7, this->symptomatic(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.PopSection)
}

::google::protobuf::uint8* PopSection::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.PopSection)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 population = 1;
  if (this->population() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->population(), target);
  }

  // double immune = 2;
  if (this->immune() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->immune(), target);
  }

  // double infected = 3;
  if (this->infected() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(3, this->infected(), target);
  }

  // double infectious = 4;
  if (this->infectious() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(4, this->infectious(), target);
  }

  // double recovered = 5;
  if (this->recovered() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(5, this->recovered(), target);
  }

  // double susceptible = 6;
  if (this->susceptible() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(6, this->susceptible(), target);
  }

  // double symptomatic = 7;
  if (this->symptomatic() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(7, this->symptomatic(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.PopSection)
  return target;
}

size_t PopSection::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.PopSection)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // double immune = 2;
  if (this->immune() != 0) {
    total_size += 1 + 8;
  }

  // double infected = 3;
  if (this->infected() != 0) {
    total_size += 1 + 8;
  }

  // double infectious = 4;
  if (this->infectious() != 0) {
    total_size += 1 + 8;
  }

  // double recovered = 5;
  if (this->recovered() != 0) {
    total_size += 1 + 8;
  }

  // double susceptible = 6;
  if (this->susceptible() != 0) {
    total_size += 1 + 8;
  }

  // double symptomatic = 7;
  if (this->symptomatic() != 0) {
    total_size += 1 + 8;
  }

  // uint32 population = 1;
  if (this->population() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->population());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PopSection::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.PopSection)
  GOOGLE_DCHECK_NE(&from, this);
  const PopSection* source =
      ::google::protobuf::DynamicCastToGenerated<PopSection>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.PopSection)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.PopSection)
    MergeFrom(*source);
  }
}

void PopSection::MergeFrom(const PopSection& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.PopSection)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.immune() != 0) {
    set_immune(from.immune());
  }
  if (from.infected() != 0) {
    set_infected(from.infected());
  }
  if (from.infectious() != 0) {
    set_infectious(from.infectious());
  }
  if (from.recovered() != 0) {
    set_recovered(from.recovered());
  }
  if (from.susceptible() != 0) {
    set_susceptible(from.susceptible());
  }
  if (from.symptomatic() != 0) {
    set_symptomatic(from.symptomatic());
  }
  if (from.population() != 0) {
    set_population(from.population());
  }
}

void PopSection::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.PopSection)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PopSection::CopyFrom(const PopSection& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.PopSection)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PopSection::IsInitialized() const {
  return true;
}

void PopSection::Swap(PopSection* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PopSection::InternalSwap(PopSection* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(immune_, other->immune_);
  swap(infected_, other->infected_);
  swap(infectious_, other->infectious_);
  swap(recovered_, other->recovered_);
  swap(susceptible_, other->susceptible_);
  swap(symptomatic_, other->symptomatic_);
  swap(population_, other->population_);
}

::google::protobuf::Metadata PopSection::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_ProtobufEpiFormat_2eproto);
  return ::file_level_metadata_ProtobufEpiFormat_2eproto[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace proto
namespace google {
namespace protobuf {
template<> PROTOBUF_NOINLINE ::proto::EpiFile* Arena::CreateMaybeMessage< ::proto::EpiFile >(Arena* arena) {
  return Arena::CreateInternal< ::proto::EpiFile >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::Timestep* Arena::CreateMaybeMessage< ::proto::Timestep >(Arena* arena) {
  return Arena::CreateInternal< ::proto::Timestep >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::Location* Arena::CreateMaybeMessage< ::proto::Location >(Arena* arena) {
  return Arena::CreateInternal< ::proto::Location >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::Coordinate* Arena::CreateMaybeMessage< ::proto::Coordinate >(Arena* arena) {
  return Arena::CreateInternal< ::proto::Coordinate >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::PopSection* Arena::CreateMaybeMessage< ::proto::PopSection >(Arena* arena) {
  return Arena::CreateInternal< ::proto::PopSection >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
